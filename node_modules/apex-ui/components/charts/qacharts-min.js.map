{"version":3,"file":"qacharts-min.js","sources":["../src/util/event.js","../src/config.js","../src/util/util.js","../src/calculate/calOptions.js","../src/util/timing.js","../src/util/animation.js","../src/calculate/calSeriesColor.js","../src/calculate/calLegendData.js","../src/calculate/calAxisData.js","../src/calculate/calAxisRadarData.js","../src/calculate/calChartBarData.js","../src/calculate/calChartLineData.js","../src/calculate/calChartPieData.js","../src/calculate/calChartRadarData.js","../src/draw/drawBackground.js","../src/draw/drawLegend.js","../src/draw/drawAxis.js","../src/draw/drawAxisRadar.js","../src/draw/drawCharts/drawChartBar.js","../src/draw/drawCharts/drawChartLine.js","../src/draw/drawCharts/drawChartPie.js","../src/draw/drawCharts/drawChartRadar.js","../src/draw/drawCharts/drawCharts.js","../src/app.js"],"sourcesContent":["export default class Event {\n  constructor() {\n    this.events = {}\n  }\n\n  /**\n   * 事件监听\n   * @param {String} type\n   * @param {String} listener\n   */\n  addEventListener(type, listener = function() {}) {\n    this.events[type] = this.events[type] || []\n    this.events[type].push(listener)\n  }\n\n  /**\n   * 触发事件\n   * @param {String} type\n   * @param  {...Any} params\n   */\n  trigger(type, ...params) {\n    if (!!this.events[type]) {\n      this.events[type].forEach(listener => {\n        try {\n          listener.apply(null, params)\n        } catch (e) {\n          console.error(e)\n        }\n      })\n    }\n  }\n}\n","export default {\n  animation: true,\n  animationDuration: 1000,\n  animationTiming: 'default', // default, easeIn, easeOut, easeInOut, linear\n  backgroundColor: '#ffffff',\n  colors: ['#7cb5ec', '#f7a35c', '#434348', '#90ed7d', '#f15c80', '#8085e9'], // wxcharts调色盘\n  label: {\n    show: true,\n    fontSize: 15,\n    color: 'auto',\n    margin: 2,\n  },\n  legend: {\n    show: true,\n    type: 'default', // default, circle, line, rect\n    marginTop: 8,\n    itemGap: 15,\n    shapeWidth: 15,\n    shapeHeight: 15,\n    textStyle: {\n      fontSize: 15,\n      color: '#333333',\n      padding: 5,\n    },\n  },\n  padding: [20, 20, 20, 20],\n  bar: {\n    barMaxWidth: 20,\n    barMinWidth: 1,\n    barWidth: 'auto',\n    barGap: 5,\n  },\n  pie: {\n    center: ['50%', '50%'],\n    radius: [0, '80%'],\n    offsetAngle: 0,\n    disablePieStroke: true,\n    labelLine: {\n      lineDotRadius: 3,\n      lineWidth: 1,\n      length1: 25,\n      length2: 15,\n    },\n  },\n  line: {\n    showIndex: [], // 控制显示的下标数组\n    smooth: false, // 是否显示曲线\n    connectNulls: false, // 是否连接空值数据\n    line: {\n      show: true,\n      lineWidth: 2,\n      color: 'auto',\n      opacity: 1,\n    },\n    symbol: {\n      show: true,\n      type: 'circle', // circle\n      size: 7,\n      color: 'auto',\n    },\n    area: {\n      show: false,\n      color: 'auto',\n      opacity: 0.5,\n    },\n  },\n  radar: {\n    area: {\n      show: true,\n      color: 'auto',\n      opacity: 0.5,\n    },\n    line: {\n      show: true,\n      lineWidth: 1,\n      color: 'auto',\n      opacity: 1,\n    },\n    symbol: {\n      show: true,\n      type: 'circle', // circle\n      size: 7,\n      color: 'auto',\n    },\n  },\n  radarAxis: {\n    shape: 'polygon', // polygon. circle\n    center: ['50%', '50%'],\n    radius: '80%',\n    max: 'auto',\n    splitNumber: 4,\n    axisName: {\n      show: true,\n      textStyle: {\n        fontSize: 15,\n        color: '#666666',\n        margin: 10,\n      },\n    },\n    axisLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#cccccc',\n        opacity: 1,\n      },\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#cccccc',\n        opacity: 1,\n      },\n    },\n    splitArea: {\n      odd: {\n        show: true,\n        color: '#f5f5f5', // 奇数区域颜色与背景色相同\n        opacity: 1,\n      },\n      even: {\n        show: true,\n        color: '#e6e6e6', // 奇数区域颜色与背景色相同\n        opacity: 1,\n      },\n    },\n  },\n  xAxis: {\n    show: true,\n    boundaryGap: true, // boundaryGap为true时, 这时候刻度只是作为分隔线，标签和数据点都会在两个刻度之间的带(band)中间\n    axisName: {\n      show: true,\n      text: 'x轴名称',\n      gap: 10,\n      textStyle: {\n        color: '#666666',\n        fontSize: 15,\n      },\n    },\n    axisLabel: {\n      show: true,\n      showIndex: [], // 控制显示的下标数组\n      rotate: 0,\n      gap: 5,\n      textStyle: {\n        color: '#666666',\n        fontSize: 12,\n      },\n    },\n    axisTick: {\n      show: true,\n      showIndex: [], // 控制显示的下标数组\n      alignWithLabel: false, // alignWithLabel为true时，刻度线与标签对齐\n      length: 5,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#666666',\n      },\n    },\n    axisLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#666666',\n      },\n    },\n    axisSplitLine: {\n      show: true,\n      showIndex: [], // 控制显示的下标数组\n      lineStyle: {\n        lineWidth: 1,\n        color: '#dddddd',\n      },\n    },\n  },\n  yAxis: {\n    show: true,\n    max: 'auto',\n    min: 'auto',\n    splitNumber: 4,\n    axisName: {\n      show: true,\n      text: 'y轴名称',\n      gap: 10,\n      textStyle: {\n        color: '#666666',\n        fontSize: 15,\n        align: 'center',\n      },\n    },\n    axisLabel: {\n      show: true,\n      gap: 5,\n      textStyle: {\n        color: '#666666',\n        fontSize: 12,\n      },\n    },\n    axisTick: {\n      show: true,\n      length: 5,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#666666',\n      },\n    },\n    axisLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#666666',\n      },\n    },\n    axisSplitLine: {\n      show: true,\n      lineStyle: {\n        lineWidth: 1,\n        color: '#dddddd',\n      },\n    },\n  },\n}\n","/**\n * 转化坐标\n * @param {Object} origin\n * @param {Array} center\n */\nexport function convertCoordinateOrigin(origin, center) {\n  let [centerX, centerY] = center\n\n  return {\n    x: centerX + origin.x,\n    y: centerY - origin.y,\n  }\n}\n\n/**\n * 判断是否有冲突\n * @param {Object} souce // 待检查对象\n * @param {Object} target // 比较对象\n * @param {Object} distance // 避免冲突的间隙\n */\nexport function isCollision(souce, target, distance) {\n  let isCollision = false\n  if (souce.x > 0 && target.x > 0) {\n    isCollision = souce.y + distance > target.y\n  } else if (souce.x < 0 && target.x < 0) {\n    isCollision = souce.y - distance < target.y\n  }\n\n  return isCollision\n}\n\n/**\n * 检查并避免冲突\n * @param {Object} souce // 待检查对象\n * @param {Object} target // 比较对象\n * @param {Object} distance // 避免冲突的间隙\n */\nexport function avoidCollision(souce, target, distance) {\n  if (target) {\n    while (isCollision(souce, target, distance)) {\n      if (souce.x > 0) {\n        souce.y--\n      } else if (souce.x < 0) {\n        souce.y++\n      }\n    }\n  }\n  return souce\n}\n\n/**\n * 10% => 0.1\n * @param {String} percent\n */\nexport function percentToNum(percent) {\n  if (!!percent) {\n    percent = String(percent).replace('%', '')\n    percent = Number(percent) / 100\n  } else {\n    percent = 0\n  }\n  return percent\n}\n\n/**\n * 判断一个数据是否为对象\n * @param {Any} data\n */\nexport function isObject(data) {\n  return Object.prototype.toString.call(data) === '[object Object]'\n}\n\n/**\n * 判断一个数据是否为数组\n * @param {Any} data\n */\nexport function isArray(data) {\n  return Object.prototype.toString.call(data) === '[object Array]'\n}\n","import { isObject, isArray } from '../util/util'\n\n/**\n * 将来源对象数据补充到目标对象中\n * @param {String} key\n * @param {Object} sources // 来源对象\n * @param {Object} target  // 目标对象\n * @param {Boolean} isCover  // 是否强制来源对象数据覆盖目标对象数据\n */\nexport function replenishData(key, sources, target, isCover = false) {\n  if (!target[key] && target[key] !== 0 && target[key] !== '' && typeof target[key] !== 'boolean') {\n    // console.log(`空值, ${key}, target[key]: ${target[key]}, sources[key]: ${sources[key]}, isCover: ${isCover}`)\n    // (opts参数为空时赋值)\n    if (isObject(sources[key])) {\n      target[key] = Object.assign({}, sources[key])\n    } else if (isArray(sources[key])) {\n      target[key] = [].concat(sources[key])\n    } else {\n      target[key] = sources[key]\n    }\n  } else {\n    // console.log(`不为空值, ${key}, target[key]: ${target[key]}, sources[key]: ${sources[key]}, isCover: ${isCover}`)\n    // (opts参数不为为空时，若数据类型为原始类型和数组则不做处理，对象类型时递归)\n    if (isCover) {\n      if (isObject(sources[key])) {\n        Object.keys(sources[key]).forEach(_key => {\n          replenishData(_key, sources[key], target[key], isCover)\n        })\n      } else if (isArray(sources[key])) {\n        if (key == 'series') {\n          sources[key].forEach((sourcesItem, sourcesIndex) => {\n            Object.keys(sourcesItem).forEach(_key => {\n              replenishData(_key, sources[key][sourcesIndex], target[key][sourcesIndex], true)\n            })\n          })\n        } else {\n          target[key] = [].concat(sources[key])\n        }\n      } else {\n        target[key] = sources[key]\n      }\n    } else {\n      if (isObject(target[key])) {\n        Object.keys(sources[key]).forEach(_key => {\n          replenishData(_key, sources[key], target[key], isCover)\n        })\n      }\n    }\n  }\n}\n\n/**\n * 将opts的数据补充完整\n */\nexport function calOptions() {\n  let { config, opts } = this\n\n  replenishData('animation', config, opts)\n  replenishData('animationDuration', config, opts)\n  replenishData('animationTiming', config, opts)\n  replenishData('backgroundColor', config, opts)\n  replenishData('colors', config, opts)\n  replenishData('padding', config, opts)\n  replenishData('legend', config, opts)\n\n  switch (opts.type) {\n    case 'bar':\n      replenishData('yAxis', config, opts)\n      replenishData('xAxis', config, opts)\n      break\n    case 'line':\n      replenishData('yAxis', config, opts)\n      replenishData('xAxis', config, opts)\n      break\n    case 'pie':\n      break\n    case 'radar':\n      replenishData('radarAxis', config, opts)\n      break\n  }\n\n  calSeries.call(this)\n\n  console.log('complete calOptions', this)\n}\n\n/**\n * 将series的数据补充完整\n */\nexport function calSeries() {\n  let { config, opts } = this\n\n  switch (opts.type) {\n    case 'bar':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('barMaxWidth', config.bar, seriesItem)\n        replenishData('barMinWidth', config.bar, seriesItem)\n        replenishData('barWidth', config.bar, seriesItem)\n        replenishData('barGap', config.bar, seriesItem)\n      })\n      break\n    case 'line':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('smooth', config.line, seriesItem)\n        replenishData('connectNulls', config.line, seriesItem)\n        replenishData('line', config.line, seriesItem)\n        replenishData('symbol', config.line, seriesItem)\n        replenishData('area', config.line, seriesItem)\n      })\n      break\n    case 'pie':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('center', config.pie, seriesItem)\n        replenishData('radius', config.pie, seriesItem)\n        replenishData('labelLine', config.pie, seriesItem)\n        replenishData('offsetAngle', config.pie, seriesItem)\n        replenishData('disablePieStroke', config.pie, seriesItem)\n      })\n      break\n    case 'radar':\n      opts.series.forEach(seriesItem => {\n        replenishData('label', config, seriesItem)\n        replenishData('line', config.radar, seriesItem)\n        replenishData('symbol', config.radar, seriesItem)\n        replenishData('area', config.radar, seriesItem)\n      })\n      break\n  }\n}\n","export default {\n  easeIn: function(pos) {\n    return Math.pow(pos, 3)\n  },\n  easeOut: function(pos) {\n    return Math.pow(pos - 1, 3) + 1\n  },\n  easeInOut: function(pos) {\n    if ((pos /= 0.5) < 1) {\n      return 0.5 * Math.pow(pos, 3)\n    } else {\n      return 0.5 * (Math.pow(pos - 2, 3) + 2)\n    }\n  },\n  linear: function(pos) {\n    return pos\n  },\n}\n","import Timing from './timing'\n\nexport default class Animation {\n  constructor(opts) {\n    this.isStop = false\n\n    let { type, animation, animationDuration, animationTiming, onProcess, onAnimationFinish } = opts\n\n    let createAnimationFrame = function() {\n      if (typeof requestAnimationFrame !== 'undefined') {\n        return requestAnimationFrame\n      } else if (typeof setTimeout !== 'undefined') {\n        return function(step) {\n          setTimeout(function() {\n            let timeStamp = +new Date()\n            step(timeStamp)\n          }, 17)\n        }\n      } else {\n        return function(step) {\n          step(null)\n        }\n      }\n    }\n    let animationFrame = createAnimationFrame()\n\n    if (animation) {\n      if (animationTiming == 'default') {\n        switch (type) {\n          case 'bar':\n          case 'line':\n            animationTiming = 'easeIn'\n            break\n          case 'pie':\n          case 'radar':\n            animationTiming = 'easeInOut'\n            break\n        }\n      }\n      let timingFunction = Timing[animationTiming]\n      let startTimeStamp = null\n\n      let step = function() {\n        if (this.isStop === true) {\n          onProcess(1)\n          onAnimationFinish()\n          return\n        }\n\n        let timeStamp = +new Date()\n        if (!startTimeStamp) startTimeStamp = timeStamp\n\n        if (timeStamp - startTimeStamp < animationDuration) {\n          let process = (timeStamp - startTimeStamp) / animationDuration\n          process = timingFunction(process)\n          opts.onProcess(process)\n          animationFrame(step)\n        } else {\n          onProcess(1)\n          onAnimationFinish()\n        }\n      }\n      step = step.bind(this)\n\n      animationFrame(step)\n    } else {\n      onProcess(1)\n      onAnimationFinish()\n    }\n  }\n\n  /**\n   * 停止动画\n   */\n  stop() {\n    this.isStop = true\n  }\n}\n","export default function calSeriesColor() {\n  const colors = this.opts.colors\n  const colorsLength = colors.length\n\n  if (this.opts.type == 'pie') {\n    this.opts.series.forEach(seriesItem => {\n      seriesItem.data.forEach((dataItem, dataIndex) => {\n        dataItem.itemStyle = dataItem.itemStyle || {}\n        if (!dataItem.itemStyle.color) {\n          dataItem.itemStyle.color = colors[dataIndex % colorsLength]\n        }\n      })\n    })\n  } else {\n    this.opts.series.forEach((seriesItem, seriesIndex) => {\n      seriesItem.itemStyle = seriesItem.itemStyle || {}\n      if (!seriesItem.itemStyle.color) {\n        seriesItem.itemStyle.color = colors[seriesIndex % colorsLength]\n      }\n    })\n  }\n\n  console.log('complete calSeriesColor')\n}\n","export default function calLegendData() {\n  if (this.opts.legend.show) {\n    let { context, opts } = this\n    let { type, width, legend, series } = opts\n    let { shapeWidth, shapeHeight, itemGap, marginTop, textStyle } = legend\n    let { fontSize, padding } = textStyle\n    let seriesDataList = []\n    let legendWidth = 0\n    let legendWidthNum = 0\n    let legendList = []\n    let currentRow = []\n\n    context.font = `${fontSize}px`\n\n    if (type == 'pie') {\n      seriesDataList = series[0].data\n    } else {\n      seriesDataList = series\n    }\n\n    seriesDataList.forEach(seriesDataItem => {\n      let { name, itemStyle } = seriesDataItem\n      let measureText = this.context.measureText(name || '').width\n      let itemWidth = shapeWidth + padding + itemGap + measureText\n\n      let obj = {\n        name,\n        measureText,\n        itemStyle,\n      }\n\n      if (legendWidthNum + itemWidth > width) {\n        legendList.push(currentRow)\n        legendWidthNum = itemWidth\n        currentRow = [obj]\n      } else {\n        legendWidthNum += itemWidth\n        legendWidth = Math.max(legendWidth, legendWidthNum)\n        currentRow.push(obj)\n      }\n    })\n\n    if (legendList.length == 0) {\n      legendList.push(currentRow)\n    }\n    this.legendData = {\n      legendList,\n      legendWidth: legendWidth - itemGap,\n      legendHeight: legendList.length * Math.max(shapeHeight, fontSize) + (legendList.length - 1) * itemGap + marginTop,\n    }\n  } else {\n    this.legendData = {\n      legendList: [],\n      legendWidth: 0,\n      legendHeight: 0,\n    }\n  }\n\n  console.log('complete calLegendData')\n}\n","export default function calAxisYData() {\n  let { context, opts, legendData, chartData } = this\n  let { width, height, xAxis, yAxis, padding, categories, series } = opts\n\n  let {\n    show: xAxisShow,\n    format: xAxisFormat,\n    axisName: xAxisName,\n    axisLabel: xAxisLabel,\n    axisTick: xAxisTick,\n    axisLine: xAxisLine,\n    axisSplitLine: xAxisSplitLine,\n    boundaryGap,\n  } = xAxis\n\n  let {\n    show: yAxisShow,\n    max,\n    min,\n    splitNumber,\n    format: yAxisFormat,\n    axisName: yAxisName,\n    axisLabel: yAxisLabel,\n    axisTick: yAxisTick,\n    axisLine: yAxisLine,\n    axisSplitLine: yAxisSplitLine,\n  } = yAxis\n\n  let { show: xAxisNameShow, text: xAxisNameText, gap: xAxisNameGap, textStyle: xAxisNameTextStyle } = xAxisName\n  let { show: xAxisLabelShow, gap: xAxisLabelGap, rotate: xAxisLabelRotate, textStyle: xAxisLabelTextStyle } = xAxisLabel\n  let { show: xAxisTickShow, length: xAxisTickLength, lineStyle: xAxisTickStyle, alignWithLabel } = xAxisTick\n  let { show: xAxisLineShow, lineStyle: xAxisLineStyle } = xAxisLine\n  let { show: xAxisSplitLineShow, lineStyle: xAxisSplitLineStyle } = xAxisSplitLine\n\n  let { show: yAxisNameShow, text: yAxisNameText, gap: yAxisNameGap, textStyle: yAxisNameTextStyle } = yAxisName\n  let { show: yAxisLabelShow, gap: yAxisLabelGap, textStyle: yAxisLabelTextStyle } = yAxisLabel\n  let { show: yAxisTickShow, length: yAxisTickLength, lineStyle: yAxisTickStyle } = yAxisTick\n  let { show: yAxisLineShow, lineStyle: yAxisLineStyle } = yAxisLine\n  let { show: yAxisSplitLineShow, lineStyle: yAxisSplitLineStyle } = yAxisSplitLine\n\n  let { fontSize: xAxisNameFontSize } = xAxisNameTextStyle\n  let { fontSize: xAxisLabelFontSize } = xAxisLabelTextStyle\n  let { lineWidth: xAxisTickLineWidth } = xAxisTickStyle\n  let { lineWidth: xAxisLineWidth } = xAxisLineStyle\n  let { lineWidth: xAxisSplitLineWidth } = xAxisSplitLineStyle\n\n  let { fontSize: yAxisNameFontSize } = yAxisNameTextStyle\n  let { fontSize: yAxisLabelFontSize } = yAxisLabelTextStyle\n  let { lineWidth: yAxisTickLineWidth } = yAxisTickStyle\n  let { lineWidth: yAxisLineWidth } = yAxisLineStyle\n  let { lineWidth: yAxisSplitLineWidth } = yAxisSplitLineStyle\n\n  // 以x,y轴交叉点为原点\n  let xStart = padding[3] // x方向起点\n  let xEnd = width - padding[1] // x方向终点\n  let yStart = height - padding[2] - legendData.legendHeight // y方向起点\n  let yEnd = padding[0] // y方向终点\n\n  let xStartInit = xStart\n  let yStartInit = yStart\n\n  let xSpacingNumber = boundaryGap ? categories.length : categories.length - 1\n  let xSpacing = 0\n  let xEachSpacing = 0\n  let xAxisLabelMaxHeight = 0\n  let xAxisLabelMaxWidht = 0\n  let xAxisNameTextWidth = 0\n\n  let isSamePart = true // 是否同时为正数或负数，为false时同时存在正负数\n  let yZero = 0\n  let plusSpacing = 0\n  let minusSpacing = 0\n  let yAxisLabelText = []\n  let yAxisLabelMaxWidth = 0\n  let ySpacing = 0\n  let yEachSpacing = 0\n  let maxData = 0\n  let minData = 0\n  let dataRange = 0\n  let dataEachRange = 0\n\n  let limit = 0\n  let multiple = 1\n\n  chartData.xAxis = {\n    xAxisLabelMaxHeight: 0,\n    xStart: 0,\n    xEnd: 0,\n    xSpacing: 0,\n    xEachSpacing: 0,\n    xAxisLabelPoint: [],\n    xAxisTickPoint: [],\n    xAxisLinePoint: {},\n    xAxisSplitLinePoint: [],\n    xAxisNamePoint: {},\n  }\n  chartData.yAxis = {\n    isSamePart: true,\n    yAxisLabelMaxWidth: 0,\n    yStart: 0,\n    yEnd: 0,\n    ySpacing: 0,\n    yEachSpacing: 0,\n    maxData: 0,\n    minData: 0,\n    dataRange: 0,\n    dataEachRange: 0,\n    yAxisLabelPoint: [],\n    yAxisTickPoint: [],\n    yAxisLinePoint: {},\n    yAxisSplitLinePoint: [],\n    yAxisNamePoint: {},\n  }\n\n  // 计算y轴数据的最大值最小值\n  let allDataArr = series.reduce((allDataArr, seriesItem) => {\n    return allDataArr.concat(seriesItem.data)\n  }, [])\n  maxData = Math.max(...allDataArr)\n  minData = Math.min(...allDataArr)\n\n  if (maxData >= 0 && minData >= 0) {\n    minData = typeof min === 'number' ? min : 0\n  } else if (maxData <= 0 && minData <= 0) {\n    maxData = typeof max === 'number' ? max : 0\n  } else {\n    maxData = typeof max === 'number' ? max : maxData\n    minData = typeof min === 'number' ? max : minData\n  }\n\n  dataRange = maxData - minData\n  if (dataRange >= 10000) {\n    limit = 1000\n  } else if (dataRange >= 1000) {\n    limit = 100\n  } else if (dataRange >= 100) {\n    limit = 10\n  } else if (dataRange >= 10) {\n    limit = 5\n  } else if (dataRange >= 1) {\n    limit = 1\n  } else if (dataRange >= 0.1) {\n    limit = 0.1\n  } else if (dataRange >= 0.01) {\n    limit = 0.01\n  } else if (dataRange >= 0.001) {\n    limit = 0.001\n  } else {\n    limit = 0.0001\n  }\n\n  while (limit < 1) {\n    limit *= 10\n    multiple *= 10\n  }\n\n  maxData = maxData * multiple\n  minData = minData * multiple\n\n  if (max === 'auto') {\n    maxData = Math.ceil(maxData)\n    while (maxData % limit !== 0) {\n      maxData++\n    }\n  }\n  if (min === 'auto') {\n    minData = Math.floor(minData)\n    while (minData % limit !== 0) {\n      minData--\n    }\n  }\n\n  // 修正后的 maxData, minData, dataRange, isSamePart\n  maxData = maxData / multiple\n  minData = minData / multiple\n  dataRange = maxData - minData\n  isSamePart = maxData > 0 && minData < 0 ? false : true // 是否同时为正数或负数，为false时同时存在正负数\n\n  // 计算y轴数据\n  dataEachRange = dataRange / splitNumber\n  context.font = `${yAxisLabelFontSize}px`\n  if (isSamePart) {\n    for (let i = 0; i <= splitNumber; i++) {\n      let num = minData + dataEachRange * i\n      num = num.toFixed(multiple.toString().length - 1)\n      let text = yAxisFormat ? yAxisFormat(num) : num\n      yAxisLabelMaxWidth = Math.max(context.measureText(text).width, yAxisLabelMaxWidth)\n      yAxisLabelText.push(text)\n    }\n  } else {\n    yAxisLabelText.push(0)\n\n    let num = 0\n    while (num < maxData) {\n      num += dataEachRange\n      yAxisLabelText.push(num)\n    }\n\n    num = 0\n    while (num > minData) {\n      num -= dataEachRange\n      yAxisLabelText.unshift(num)\n    }\n\n    yAxisLabelText.forEach(text => {\n      text = yAxisFormat ? yAxisFormat(text) : text\n      yAxisLabelMaxWidth = Math.max(context.measureText(text).width, yAxisLabelMaxWidth)\n    })\n  }\n\n  // 修正xStart\n  if (yAxisLabelShow) {\n    xStart += yAxisLabelMaxWidth + yAxisLabelGap\n  }\n  if (yAxisShow && yAxisTickShow) {\n    xStart += yAxisTickLength\n  }\n\n  // 修正xEnd\n  if (xAxisShow && xAxisNameShow) {\n    context.font = `${xAxisNameFontSize}px`\n    xAxisNameTextWidth = context.measureText(xAxisNameText).width\n    xEnd -= xAxisNameTextWidth + xAxisNameGap\n    xSpacing = xEnd - xStart\n    xEachSpacing = Math.floor(xSpacing / xSpacingNumber)\n    xEnd = xStart + xEachSpacing * xSpacingNumber\n  }\n\n  // 修正yStart\n  if (xAxisShow && xAxisLabelShow) {\n    context.font = `${xAxisLabelFontSize}px`\n    categories.forEach(item => {\n      item = xAxisFormat ? xAxisFormat(item) : item\n      xAxisLabelMaxWidht = Math.max(xAxisLabelMaxWidht, context.measureText(item).width)\n    })\n\n    if (xAxisLabelRotate == 0) {\n      xAxisLabelMaxHeight = xAxisLabelFontSize\n    } else {\n      xAxisLabelMaxHeight =\n        Math.abs(xAxisLabelMaxWidht * Math.sin((xAxisLabelRotate * Math.PI) / 180)) +\n        Math.abs(xAxisLabelFontSize * Math.cos((xAxisLabelRotate * Math.PI) / 180))\n    }\n\n    yStart -= xAxisLabelMaxHeight + xAxisLabelGap\n  }\n  if (xAxisShow && xAxisTickShow) {\n    if (isSamePart) {\n      yStart -= xAxisTickLength\n    }\n  }\n\n  // 修正yEnd\n  if (yAxisShow && yAxisNameShow) {\n    yEnd += yAxisNameFontSize + yAxisNameGap\n    ySpacing = yStart - yEnd\n    yEachSpacing = Math.floor(ySpacing / (yAxisLabelText.length - 1))\n    yEnd = yStart - yEachSpacing * (yAxisLabelText.length - 1) // yEachSpacing经由Math.floor计算后存在误差，需重新计算yEnd\n    ySpacing = yStart - yEnd\n  }\n\n  // 计算 yAxis 各项数据 (先计算y轴再计算x轴)\n  // 计算 yAxisLabelPoint\n  chartData.yAxis.yAxisLabelPoint = yAxisLabelText.reduce((arr, item, index) => {\n    let _xStart = xStartInit\n\n    arr.push({\n      text: item,\n      x: _xStart + yAxisLabelMaxWidth,\n      y: yStart - xAxisLineWidth / 2 - yEachSpacing * index,\n    })\n\n    if (!isSamePart && item === 0) {\n      yZero = yStart - xAxisLineWidth / 2 - yEachSpacing * index // 存在正负值时计算0线的y坐标\n      plusSpacing = yZero - yEnd\n      minusSpacing = yStart - yZero\n    }\n\n    return arr\n  }, [])\n\n  // 计算 yAxisTickPoint\n  if (yAxisShow && yAxisTickShow) {\n    let _xStart = xStartInit\n    if (yAxisShow && yAxisLabelShow) {\n      _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n    }\n\n    chartData.yAxis.yAxisTickPoint = chartData.yAxis.yAxisLabelPoint.reduce((arr, item, index) => {\n      arr.push({\n        startX: _xStart, // 起点x坐标\n        startY: yStart - yAxisTickLineWidth / 2 - yEachSpacing * index, // 起点y坐标\n        endX: _xStart + yAxisTickLength, // 终点x坐标\n        endY: yStart - yAxisTickLineWidth / 2 - yEachSpacing * index, // 终点y坐标\n      })\n      return arr\n    }, [])\n  }\n\n  // 计算 yAxisSplitLinePoint\n  if (yAxisShow && yAxisSplitLineShow) {\n    let _xStart = xStartInit\n    if (yAxisShow && yAxisLabelShow) {\n      _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n    }\n    if (yAxisShow && yAxisTickShow) {\n      _xStart += yAxisTickLength // 更新_xStart数据\n    }\n\n    chartData.yAxis.yAxisSplitLinePoint = chartData.yAxis.yAxisLabelPoint.reduce((arr, item, index) => {\n      arr.push({\n        startX: _xStart, // 起点x坐标 ps: 这里应该是不用加yAxisLineWidth的\n        startY: yStart - yAxisSplitLineWidth / 2 - yEachSpacing * index, // 起点y坐标\n        endX: xEnd, // 终点x坐标\n        endY: yStart - yAxisSplitLineWidth / 2 - yEachSpacing * index, // 终点y坐标\n      })\n      return arr\n    }, [])\n  }\n\n  // 计算 yAxisLinePoint\n  if (yAxisShow && yAxisLineShow) {\n    let _xStart = xStartInit\n    if (yAxisShow && yAxisLabelShow) {\n      _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n    }\n    if (yAxisShow && yAxisTickShow) {\n      _xStart += yAxisTickLength // 更新_xStart数据\n    }\n\n    chartData.yAxis.yAxisLinePoint = {\n      startX: _xStart + yAxisLineWidth / 2, // 起点x坐标\n      startY: yStart, // 起点y坐标\n      endX: _xStart + yAxisLineWidth / 2, // 终点x坐标\n      endY: yEnd - yAxisTickLineWidth, // 终点y坐标\n    }\n  }\n\n  // 计算 yAxisNamePoint\n  if (yAxisShow && yAxisNameShow) {\n    let _xStart = xStartInit\n    if (yAxisShow && yAxisLabelShow) {\n      _xStart += yAxisLabelMaxWidth + yAxisLabelGap // 更新_xStart数据\n    }\n    if (yAxisShow && yAxisTickShow) {\n      _xStart += yAxisTickLength // 更新_xStart数据\n    }\n    if (yAxisShow && yAxisLineShow) {\n      _xStart += yAxisLineWidth / 2 // 更新_xStart数据\n    }\n\n    chartData.yAxis.yAxisNamePoint = {\n      text: yAxisNameText,\n      x: _xStart,\n      y: yEnd - yAxisNameGap,\n    }\n  }\n\n  // 计算 xAxis 各项数据\n  // 计算 xAxisLabelPoint\n  chartData.xAxis.xAxisLabelPoint = categories.reduce((arr, item, index) => {\n    let _yStart = yStartInit\n\n    if (boundaryGap) {\n      arr.push({\n        text: item,\n        x: xStart + xEachSpacing * (index + 1) - xEachSpacing / 2,\n        y: _yStart - xAxisLabelMaxHeight,\n      })\n    } else {\n      arr.push({\n        text: item,\n        x: xStart + xEachSpacing * index,\n        y: _yStart - xAxisLabelMaxHeight,\n      })\n    }\n    return arr\n  }, [])\n\n  // 计算 xAxisSplitLinePoint\n  if (xAxisShow && xAxisSplitLineShow) {\n    let _yStart = yStartInit\n    if (xAxisShow && xAxisLabelShow) {\n      _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新yStart数据\n    }\n    if (xAxisShow && xAxisTickShow) {\n      if (isSamePart) {\n        _yStart -= xAxisTickLength // 更新yStart数据\n      }\n    }\n\n    for (let index = 0, xAxisSplitLineNumber = boundaryGap ? categories.length + 1 : categories.length; index < xAxisSplitLineNumber; index++) {\n      chartData.xAxis.xAxisSplitLinePoint.push({\n        startX: xStart + xAxisSplitLineWidth / 2 + xEachSpacing * index,\n        startY: _yStart,\n        endX: xStart + xAxisSplitLineWidth / 2 + xEachSpacing * index,\n        endY: yEnd,\n      })\n    }\n  }\n\n  // 计算 xAxisTickPoint\n  if (xAxisShow && xAxisTickShow) {\n    let _yStart = yStartInit\n\n    if (isSamePart) {\n      if (xAxisShow && xAxisLabelShow) {\n        _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新yStart数据\n      }\n      _yStart -= xAxisTickLength\n    } else {\n      _yStart = yZero\n    }\n\n    // alignWithLabel为true时，刻度线与标签对齐\n    let xAxisTickNumber = 0\n    if (boundaryGap) {\n      xAxisTickNumber = alignWithLabel ? categories.length : categories.length + 1\n    } else {\n      xAxisTickNumber = categories.length\n    }\n\n    for (let index = 0; index < xAxisTickNumber; index++) {\n      if (boundaryGap && alignWithLabel) {\n        chartData.xAxis.xAxisTickPoint.push({\n          startX: xStart + xAxisTickLineWidth / 2 + xEachSpacing * index + xEachSpacing / 2,\n          startY: _yStart,\n          endX: xStart + xAxisTickLineWidth / 2 + xEachSpacing * index + xEachSpacing / 2,\n          endY: _yStart + xAxisTickLength,\n        })\n      } else {\n        chartData.xAxis.xAxisTickPoint.push({\n          startX: xStart + xAxisTickLineWidth / 2 + xEachSpacing * index,\n          startY: _yStart,\n          endX: xStart + xAxisTickLineWidth / 2 + xEachSpacing * index,\n          endY: _yStart + xAxisTickLength,\n        })\n      }\n    }\n  }\n\n  // 计算 xAxisLinePoint\n  if (xAxisShow && xAxisLineShow) {\n    let _yStart = yStartInit\n    if (isSamePart) {\n      if (xAxisShow && xAxisLabelShow) {\n        _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新yStart数据\n      }\n      if (xAxisShow && xAxisTickShow) {\n        _yStart -= xAxisTickLength // 更新yStart数据\n      }\n      _yStart -= xAxisLineWidth / 2\n    } else {\n      _yStart = yZero\n    }\n\n    chartData.xAxis.xAxisLinePoint = {\n      startX: xStart,\n      startY: _yStart,\n      endX: xEnd + yAxisTickLineWidth,\n      endY: _yStart,\n    }\n  }\n\n  // 计算 xAxisNamePoint\n  if (xAxisShow && xAxisNameShow) {\n    let _yStart = yStartInit\n    if (isSamePart) {\n      if (xAxisShow && xAxisLabelShow) {\n        _yStart -= xAxisLabelMaxHeight + xAxisLabelGap // 更新yStart数据\n      }\n      if (xAxisShow && xAxisTickShow) {\n        _yStart -= xAxisTickLength // 更新yStart数据\n      }\n      if (xAxisShow && xAxisLineShow) {\n        _yStart -= xAxisLineWidth / 2 // 更新yStart数据\n      }\n    } else {\n      _yStart = yZero - xAxisLineWidth / 2\n    }\n\n    chartData.xAxis.xAxisNamePoint = {\n      text: xAxisNameText,\n      x: xEnd + xAxisNameGap,\n      y: _yStart,\n    }\n  }\n\n  chartData.xAxis.xAxisLabelMaxHeight = xAxisLabelMaxHeight\n  chartData.xAxis.xStart = xStart\n  chartData.xAxis.xEnd = xEnd\n  chartData.xAxis.xSpacing = xSpacing\n  chartData.xAxis.xEachSpacing = xEachSpacing\n\n  chartData.yAxis.yAxisLabelMaxWidth = yAxisLabelMaxWidth\n  chartData.yAxis.isSamePart = isSamePart\n  chartData.yAxis.yZero = yZero\n  chartData.yAxis.plusSpacing = plusSpacing\n  chartData.yAxis.minusSpacing = minusSpacing\n  chartData.yAxis.yStart = yStart\n  chartData.yAxis.yEnd = yEnd\n  chartData.yAxis.ySpacing = ySpacing\n  chartData.yAxis.yEachSpacing = yEachSpacing\n  chartData.yAxis.maxData = maxData\n  chartData.yAxis.minData = minData\n  chartData.yAxis.dataRange = dataRange\n  chartData.yAxis.dataEachRange = dataEachRange\n\n  console.log('complete calAxisData', this.chartData)\n}\n","import { percentToNum, convertCoordinateOrigin } from '../util/util'\r\n\r\nexport default function calAxisRadarData() {\r\n  let { context, opts, legendData, chartData } = this\r\n  let { width, height, padding, radarAxis, categories } = opts\r\n  let { center, radius, splitNumber, axisName: radarAxisName } = JSON.parse(JSON.stringify(radarAxis))\r\n  let { show: radarAxisNameShow, textStyle: radarAxisNameTextStyle } = radarAxisName\r\n  let { fontSize: radarAxisNameFontSize, margin: radarAxisNameMargin } = radarAxisNameTextStyle\r\n  let [centerX, centerY] = center\r\n  chartData.radarAxis = {\r\n    center: [],\r\n    radius: 0,\r\n    lineEndPosition: [],\r\n    namePosition: [],\r\n  }\r\n\r\n  if (typeof centerX == 'string') {\r\n    centerX = width * percentToNum(centerX)\r\n  }\r\n  if (typeof centerY == 'string') {\r\n    centerY = (height - legendData.legendHeight - padding[2]) * percentToNum(centerY)\r\n  }\r\n  if (typeof radius == 'string') {\r\n    radius = ((height - legendData.legendHeight - padding[2]) * percentToNum(radius)) / 2\r\n  }\r\n\r\n  chartData.radarAxis.center = [centerX, centerY]\r\n  chartData.radarAxis.radius = radius\r\n\r\n  let spacingAangle = (2 * Math.PI) / categories.length\r\n  let start = Math.PI / 2 // 以90度为起点, 逆时针累加\r\n\r\n  let arr = []\r\n  for (let i = 0; i < splitNumber; i++) {\r\n    let scale = (splitNumber - i) / splitNumber\r\n    arr[i] = categories.reduce((arr, item, index) => {\r\n      let endPoint = {\r\n        x: radius * Math.cos(start + spacingAangle * index) * scale,\r\n        y: radius * Math.sin(start + spacingAangle * index) * scale,\r\n      }\r\n      arr.push(convertCoordinateOrigin(endPoint, chartData.radarAxis.center))\r\n      return arr\r\n    }, [])\r\n  }\r\n\r\n  chartData.radarAxis.lineEndPosition = arr\r\n\r\n  if (radarAxisNameShow) {\r\n    chartData.radarAxis.namePosition = categories.reduce((arr, item, index) => {\r\n      let point = {\r\n        x: (radius + radarAxisNameFontSize / 2 + radarAxisNameMargin) * Math.cos(start + spacingAangle * index),\r\n        y: (radius + radarAxisNameFontSize / 2 + radarAxisNameMargin) * Math.sin(start + spacingAangle * index),\r\n      }\r\n      let position = convertCoordinateOrigin(point, chartData.radarAxis.center)\r\n\r\n      context.font = `${radarAxisNameFontSize}px`\r\n\r\n      arr.push({\r\n        text: item,\r\n        point,\r\n        position,\r\n      })\r\n      return arr\r\n    }, [])\r\n  }\r\n\r\n  console.log('complete calAxisRadarData')\r\n}\r\n","export default function calChartBarData() {\n  let { opts, chartData } = this\n  let { series, xAxis } = opts\n  let { lineWidth: xAxisLineWidth } = xAxis.axisLine.lineStyle\n  let { lineWidth: xAxisTickLineWidth } = xAxis.axisTick.lineStyle\n  let { xEachSpacing, xAxisLabelPoint } = chartData.xAxis\n  let { yZero, plusSpacing, minusSpacing, yStart, yEnd, ySpacing, maxData, minData, dataRange } = chartData.yAxis\n\n  let autoWidth = 0\n  let autoWidthNumber = 0\n  let sumWidth = 0\n  // 修正barWidth和计算autoWidthNumber和部分sumWidth\n  series.forEach((seriesItem, seriesIndex) => {\n    let { barMaxWidth, barMinWidth, barWidth, barGap } = seriesItem\n\n    if (typeof seriesItem.barWidth == 'number') {\n      if (barWidth > barMaxWidth) {\n        seriesItem.barWidth = barMaxWidth\n      }\n      if (barWidth < barMinWidth) {\n        seriesItem.barWidth = barMinWidth\n      }\n      sumWidth += seriesItem.barWidth\n    } else {\n      autoWidthNumber++\n    }\n    if (seriesIndex == 0) {\n      // 第一个seriesItem的barGap为两边的padding，其他的为与上一个的间隙\n      sumWidth += 2 * barGap\n    } else {\n      sumWidth += barGap\n    }\n    return seriesItem\n  })\n\n  // 计算autoWidth\n  if (sumWidth + autoWidthNumber < xEachSpacing) {\n    autoWidth = (xEachSpacing - sumWidth) / autoWidthNumber\n  } else {\n    autoWidth = 1\n  }\n\n  // 修正barWidth，和计算完成sumWidth\n  series.forEach(seriesItem => {\n    let { barMaxWidth, barWidth } = seriesItem\n\n    if (barWidth == 'auto') {\n      seriesItem.barWidth = autoWidth > barMaxWidth ? barMaxWidth : autoWidth\n      sumWidth += seriesItem.barWidth\n    }\n  })\n\n  // 生成数据结构\n  chartData.chartBar = JSON.parse(JSON.stringify(series)).reduce((chartBarArr, seriesItem, seriesIndex) => {\n    seriesItem.data.forEach((dataItem, dataIndex) => {\n      if (!chartBarArr[dataIndex]) {\n        chartBarArr[dataIndex] = []\n      }\n      if (!chartBarArr[dataIndex][seriesIndex]) {\n        chartBarArr[dataIndex][seriesIndex] = JSON.parse(JSON.stringify(seriesItem))\n      }\n    })\n    return chartBarArr\n  }, [])\n\n  chartData.chartBar.forEach((barItemArr, dataIndex) => {\n    let x = xAxisLabelPoint[dataIndex].x - sumWidth / 2\n\n    barItemArr.forEach(barItem => {\n      // 记录柱体数值\n      barItem.data = barItem.data[dataIndex]\n\n      // 记录柱体宽度\n      if (barItem.barWidth == 'auto') {\n        barItem.barWidth = autoWidth\n      }\n\n      // 记录柱体高度和y坐标点\n      let barHeight = 0\n      let y = 0\n      if (maxData >= 0 && minData >= 0) {\n        barHeight = (ySpacing * (barItem.data - minData)) / dataRange\n        barHeight -= xAxisLineWidth\n        y = yStart - xAxisLineWidth\n      } else if (maxData <= 0 && minData <= 0) {\n        barHeight = (ySpacing * (Math.abs(barItem.data) - Math.abs(maxData))) / dataRange\n        barHeight -= xAxisTickLineWidth\n        y = yEnd + xAxisTickLineWidth\n      } else {\n        if (barItem.data > 0) {\n          barHeight = (plusSpacing * barItem.data) / maxData\n          barHeight -= xAxisLineWidth\n          y = yZero - xAxisLineWidth\n        } else {\n          barHeight = (minusSpacing * Math.abs(barItem.data)) / Math.abs(minData)\n          barHeight -= xAxisLineWidth\n          y = yZero + xAxisLineWidth\n        }\n      }\n      barItem.barHeight = barHeight\n      barItem.y = y\n\n      // 记录柱体x坐标点\n      barItem.x = x + barItem.barGap + barItem.barWidth / 2\n\n      x += barItem.barGap + barItem.barWidth\n    })\n  })\n\n  console.log('complete calChartBarData', chartData.chartBar)\n}\n","export default function calChartLineData() {\n  let { opts, chartData } = this\n  let { series, xAxis } = opts\n  let { lineWidth: xAxisLineWidth } = xAxis.axisLine.lineStyle\n  let { xAxisLabelPoint } = chartData.xAxis\n  let { yZero, plusSpacing, minusSpacing, yStart, yEnd, ySpacing, maxData, minData, dataRange } = chartData.yAxis\n\n  chartData.chartLine = JSON.parse(JSON.stringify(series)).reduce((chartLineArr, seriesItem) => {\n    seriesItem.data = seriesItem.data.reduce((dataArr, dataItem, dataIndex) => {\n      let itemHeight = 0\n      let y = 0\n      if (maxData >= 0 && minData >= 0) {\n        itemHeight = (ySpacing * (dataItem - minData)) / dataRange\n        y = yStart - (xAxisLineWidth * 3) / 2 - itemHeight\n      } else if (maxData <= 0 && minData <= 0) {\n        itemHeight = (ySpacing * (Math.abs(dataItem) - Math.abs(maxData))) / dataRange\n        y = yEnd - (xAxisLineWidth * 3) / 2 + itemHeight\n      } else {\n        if (dataItem > 0) {\n          itemHeight = (plusSpacing * dataItem) / maxData\n          y = yZero - xAxisLineWidth - itemHeight\n        } else {\n          itemHeight = (minusSpacing * Math.abs(dataItem)) / Math.abs(minData)\n          y = yZero + xAxisLineWidth + itemHeight\n        }\n      }\n\n      dataArr.push({\n        x: xAxisLabelPoint[dataIndex].x,\n        y,\n        value: dataItem,\n        height: itemHeight,\n      })\n      return dataArr\n    }, [])\n\n    chartLineArr.push(JSON.parse(JSON.stringify(seriesItem)))\n\n    return chartLineArr\n  }, [])\n\n  console.log('complete calChartLineData', this.chartData.chartLine)\n}\n","import { percentToNum } from '../util/util'\r\n\r\nexport default function calChartPieData() {\r\n  let { opts, legendData, chartData } = this\r\n  let { width, height, series, padding } = opts\r\n\r\n  chartData.chartPie = JSON.parse(JSON.stringify(series[0]))\r\n\r\n  let { data, center, radius } = chartData.chartPie\r\n  let [centerX, centerY] = center\r\n  let [radius1, radius2] = radius\r\n  let valueSum = 0\r\n\r\n  valueSum = data.reduce((sum, dataItem) => {\r\n    sum += dataItem.value === null ? 0 : dataItem.value\r\n    return sum\r\n  }, 0)\r\n\r\n  chartData.chartPie.valueSum = valueSum\r\n\r\n  if (typeof centerX == 'string') {\r\n    centerX = width * percentToNum(centerX)\r\n  }\r\n  if (typeof centerY == 'string') {\r\n    centerY = (height - legendData.legendHeight - padding[2]) * percentToNum(centerY)\r\n  }\r\n  if (typeof radius1 == 'string') {\r\n    radius1 = ((height - legendData.legendHeight - padding[2]) * percentToNum(radius1)) / 2\r\n  }\r\n  if (typeof radius2 == 'string') {\r\n    radius2 = ((height - legendData.legendHeight - padding[2]) * percentToNum(radius2)) / 2\r\n  }\r\n  chartData.chartPie.center = [centerX, centerY]\r\n  chartData.chartPie.radius = [radius1, radius2]\r\n\r\n  console.log('complete calChartPieData')\r\n}\r\n","import { convertCoordinateOrigin } from '../util/util'\r\n\r\nexport default function calChartRadarData() {\r\n  let { opts, chartData } = this\r\n  let { radarAxis, categories, series } = opts\r\n  let { max } = radarAxis\r\n  let { center, radius } = chartData.radarAxis\r\n\r\n  let maxData = 0\r\n  series.forEach(seriesItem => {\r\n    maxData = Math.max(maxData, ...seriesItem.data)\r\n  })\r\n  maxData = max == 'auto' ? maxData : max\r\n\r\n  let spacingAangle = (2 * Math.PI) / categories.length\r\n  let start = Math.PI / 2 // 以90度为起点, 逆时针累加\r\n\r\n  chartData.chartRadar = JSON.parse(JSON.stringify(series))\r\n  chartData.chartRadar.map(radarItem => {\r\n    radarItem.dataPosition = radarItem.data.reduce((arr, dataItem, dataIndex) => {\r\n      let scale = dataItem / maxData\r\n      let point = {\r\n        x: radius * Math.cos(start + spacingAangle * dataIndex) * scale,\r\n        y: radius * Math.sin(start + spacingAangle * dataIndex) * scale,\r\n      }\r\n      arr.push({\r\n        data: dataItem,\r\n        point,\r\n      })\r\n      return arr\r\n    }, [])\r\n\r\n    return radarItem\r\n  })\r\n\r\n  console.log('complete calChartRadarData')\r\n}\r\n","/**\n * 绘制背景图\n */\n\nexport default function drawBackground(startX = 0, startY = 0, endX = this.opts.width, endY = this.opts.height) {\n  this.context.fillStyle = this.opts.backgroundColor\n  this.context.fillRect(startX, startY, endX, endY)\n\n  console.log('complete drawBackground')\n}\n","/**\n * 绘制图例组件\n */\n\nexport default function drawLegend() {\n  if (!this.opts.legend.show) return\n\n  let { context, opts, legendData } = this\n  let { type, legend } = opts\n  let { type: legendType, shapeWidth, shapeHeight, itemGap, marginTop, textStyle } = legend\n  let { fontSize, color, padding } = textStyle\n  let { legendList, legendWidth, legendHeight } = legendData\n\n  if (legendType == 'default') {\n    switch (type) {\n      case 'bar':\n        legendType = 'rect'\n        break\n      case 'line':\n        legendType = 'line'\n        break\n      case 'pie':\n        legendType = 'circle'\n        break\n      case 'radar':\n        legendType = 'rect'\n        break\n    }\n  }\n\n  let legendHeightMax = Math.max(shapeHeight, fontSize)\n  let startY = opts.height - opts.padding[2] - legendHeight + marginTop\n  let startX = (opts.width - legendWidth) / 2\n  legendList.forEach((listItem, listIndex) => {\n    startX = (opts.width - legendWidth) / 2 // 重置startX\n\n    listItem.forEach(legendItem => {\n      switch (legendType) {\n        case 'circle':\n          context.beginPath()\n          context.moveTo(startX + shapeWidth / 2, startY + legendHeightMax / 2)\n          context.arc(startX + shapeWidth / 2, startY + legendHeightMax / 2, shapeWidth / 2, 0, 2 * Math.PI)\n          context.closePath()\n\n          context.fillStyle = legendItem.itemStyle.color\n          context.fill()\n          break\n        case 'line':\n          let lineLength = (shapeWidth - shapeHeight) / 2\n          lineLength < 0 ? 0 : lineLength\n\n          context.beginPath()\n          context.moveTo(startX, startY + legendHeightMax / 2)\n          context.lineTo(startX + lineLength - 2, startY + legendHeightMax / 2)\n          context.closePath()\n          context.lineWidth = 2\n          context.strokeStyle = legendItem.itemStyle.color\n          context.stroke()\n\n          context.beginPath()\n          context.moveTo(startX + shapeWidth / 2, startY + legendHeightMax / 2)\n          context.arc(startX + shapeWidth / 2, startY + legendHeightMax / 2, shapeHeight / 2, 0, 2 * Math.PI)\n          context.closePath()\n          context.fillStyle = legendItem.itemStyle.color\n          context.fill()\n\n          context.beginPath()\n          context.moveTo(startX + lineLength + shapeHeight + 2, startY + legendHeightMax / 2)\n          context.lineTo(startX + shapeWidth, startY + legendHeightMax / 2)\n          context.closePath()\n          context.lineWidth = 2\n          context.strokeStyle = legendItem.itemStyle.color\n          context.stroke()\n\n          break\n        case 'rect':\n          context.fillStyle = legendItem.itemStyle.color\n          if (shapeHeight >= fontSize) {\n            context.fillRect(startX, startY, shapeWidth, shapeHeight)\n          } else {\n            context.fillRect(startX, startY + (fontSize - shapeHeight) / 2, shapeWidth, shapeHeight)\n          }\n          break\n      }\n\n      startX += shapeWidth + padding\n\n      context.save()\n      context.textAlign = 'left'\n      context.textBaseline = 'middle'\n      context.font = `${fontSize}px`\n      context.fillStyle = color\n      context.fillText(legendItem.name, startX, startY + legendHeightMax / 2)\n      context.restore()\n\n      startX += legendItem.measureText + itemGap\n    })\n\n    startY += legendHeightMax + itemGap\n  })\n\n  console.log('complete drawLegend')\n}\n","/**\n * 绘制Y轴, 包括 axisName(名称), axisLabel(标签), axisTick(刻度线), axisLine(轴线)\n */\nexport default function drawAxisY() {\n  let { context, opts, chartData } = this\n  let { xAxis, yAxis } = opts\n\n  let { show: xAxisShow, axisName: xAxisName, axisLabel: xAxisLabel, axisTick: xAxisTick, axisLine: xAxisLine, axisSplitLine: xAxisSplitLine } = xAxis\n  let { show: yAxisShow, axisName: yAxisName, axisLabel: yAxisLabel, axisTick: yAxisTick, axisLine: yAxisLine, axisSplitLine: yAxisSplitLine } = yAxis\n\n  let { show: xAxisNameShow, textStyle: xAxisNameTextStyle } = xAxisName\n  let { show: xAxisLabelShow, showIndex: xAxisLabelShowIndex, textStyle: xAxisLabelTextStyle, rotate: xAxisLabelRotate } = xAxisLabel\n  let { show: xAxisTickShow, showIndex: xAxisTickShowIndex, lineStyle: xAxisTickStyle } = xAxisTick\n  let { show: xAxisLineShow, lineStyle: xAxisLineStyle } = xAxisLine\n  let { show: xAxisSplitLineShow, showIndex: xAxisSplitShowIndex, lineStyle: xAxisSplitLineStyle } = xAxisSplitLine\n\n  let { show: yAxisNameShow, textStyle: yAxisNameTextStyle } = yAxisName\n  let { show: yAxisLabelShow, textStyle: yAxisLabelTextStyle } = yAxisLabel\n  let { show: yAxisTickShow, lineStyle: yAxisTickStyle } = yAxisTick\n  let { show: yAxisLineShow, lineStyle: yAxisLineStyle } = yAxisLine\n  let { show: yAxisSplitLineShow, lineStyle: yAxisSplitLineStyle } = yAxisSplitLine\n\n  let { color: xAxisNameColor, fontSize: xAxisNameFontSize } = xAxisNameTextStyle\n  let { color: xAxisLabelColor, fontSize: xAxisLabelFontSize } = xAxisLabelTextStyle\n  let { color: xAxisTickLineColor, lineWidth: xAxisTickLineWidth } = xAxisTickStyle\n  let { color: xAxisLineColor, lineWidth: xAxisLineWidth } = xAxisLineStyle\n  let { color: xAxisSplitLineColor, lineWidth: xAxisSplitLineWidth } = xAxisSplitLineStyle\n\n  let { color: yAxisNameColor, fontSize: yAxisNameFontSize } = yAxisNameTextStyle\n  let { color: yAxisLabelColor, fontSize: yAxisLabelFontSize } = yAxisLabelTextStyle\n  let { color: yAxisTickLineColor, lineWidth: yAxisTickLineWidth } = yAxisTickStyle\n  let { color: yAxisLineColor, lineWidth: yAxisLineWidth } = yAxisLineStyle\n  let { color: yAxisSplitLineColor, lineWidth: yAxisSplitLineWidth } = yAxisSplitLineStyle\n\n  let { xAxisLabelPoint, xAxisTickPoint, xAxisLinePoint, xAxisSplitLinePoint, xAxisNamePoint } = chartData.xAxis\n  let { yAxisLabelPoint, yAxisTickPoint, yAxisLinePoint, yAxisSplitLinePoint, yAxisNamePoint } = chartData.yAxis\n\n  if (yAxisShow) {\n    if (yAxisLabelShow) {\n      context.save()\n      context.font = `${yAxisLabelFontSize}px`\n      context.fillStyle = yAxisLabelColor\n      context.textAlign = 'right'\n      context.textBaseline = 'middle'\n      yAxisLabelPoint.forEach(item => {\n        context.fillText(item.text, item.x, item.y)\n      })\n      context.restore()\n    }\n\n    if (yAxisTickShow) {\n      context.lineWidth = yAxisTickLineWidth\n      context.strokeStyle = yAxisTickLineColor\n\n      yAxisTickPoint.forEach(item => {\n        context.beginPath()\n        context.moveTo(item.startX, item.startY)\n        context.lineTo(item.endX, item.endY)\n        context.closePath()\n\n        context.stroke()\n      })\n    }\n\n    if (yAxisSplitLineShow) {\n      context.lineWidth = yAxisSplitLineWidth\n      context.strokeStyle = yAxisSplitLineColor\n\n      yAxisSplitLinePoint.forEach((item, index) => {\n        context.beginPath()\n        context.moveTo(item.startX, item.startY)\n        context.lineTo(item.endX, item.endY)\n        context.closePath()\n\n        context.stroke()\n      })\n    }\n\n    if (yAxisLineShow) {\n      context.beginPath()\n      context.moveTo(yAxisLinePoint.startX, yAxisLinePoint.startY)\n      context.lineTo(yAxisLinePoint.endX, yAxisLinePoint.endY)\n      context.closePath()\n\n      context.lineWidth = yAxisLineWidth\n      context.strokeStyle = yAxisLineColor\n      context.stroke()\n    }\n\n    if (yAxisNameShow) {\n      context.save()\n      context.font = `${yAxisNameFontSize}px`\n      context.fillStyle = yAxisNameColor\n      context.textAlign = 'center'\n      context.textBaseline = 'bottom'\n      context.fillText(yAxisNamePoint.text, yAxisNamePoint.x, yAxisNamePoint.y)\n      context.restore()\n    }\n  }\n\n  if (xAxisShow) {\n    if (xAxisLabelShow) {\n      context.save()\n      context.font = `${xAxisLabelFontSize}px`\n      context.fillStyle = xAxisLabelColor\n      context.textBaseline = 'top'\n\n      if (xAxisLabelRotate == 0) {\n        context.textAlign = 'center'\n      } else if (xAxisLabelRotate > 0) {\n        context.textAlign = 'right'\n      } else if (xAxisLabelRotate < 0) {\n        context.textAlign = 'left'\n      }\n\n      if (xAxisLabelShowIndex && xAxisLabelShowIndex.length) {\n        // 存在控制显示的下标数组\n        xAxisLabelShowIndex.forEach(showIndex => {\n          let item = xAxisLabelPoint[showIndex]\n\n          if (xAxisLabelRotate == 0) {\n            context.fillText(item.text, item.x, item.y)\n          } else {\n            context.save()\n            context.translate(item.x, item.y)\n            context.rotate((-xAxisLabelRotate * Math.PI) / 180)\n            context.fillText(item.text, 0, 0)\n            context.restore()\n          }\n        })\n      } else {\n        xAxisLabelPoint.forEach(item => {\n          if (xAxisLabelRotate == 0) {\n            context.fillText(item.text, item.x, item.y)\n          } else {\n            context.save()\n            context.translate(item.x, item.y)\n            context.rotate((-xAxisLabelRotate * Math.PI) / 180)\n            context.fillText(item.text, 0, 0)\n            context.restore()\n          }\n        })\n      }\n\n      context.restore()\n    }\n\n    if (xAxisSplitLineShow) {\n      context.lineWidth = xAxisSplitLineWidth\n      context.strokeStyle = xAxisSplitLineColor\n\n      if (xAxisSplitShowIndex && xAxisSplitShowIndex.length) {\n        // 存在控制显示的下标数组\n        xAxisSplitShowIndex.forEach(showIndex => {\n          let item = xAxisSplitLinePoint[showIndex]\n\n          if (showIndex == 0 && yAxisShow && yAxisLineShow) return\n\n          context.beginPath()\n          context.moveTo(item.startX, item.startY)\n          context.lineTo(item.endX, item.endY)\n          context.closePath()\n\n          context.stroke()\n        })\n      } else {\n        xAxisSplitLinePoint.forEach((item, index) => {\n          // 由于先绘制y轴后绘制x轴, 在y轴轴线显示的情况下，为避免覆盖，不绘制x轴网格线的第一条\n          if (index == 0 && yAxisShow && yAxisLineShow) return\n\n          context.beginPath()\n          context.moveTo(item.startX, item.startY)\n          context.lineTo(item.endX, item.endY)\n          context.closePath()\n\n          context.stroke()\n        })\n      }\n    }\n\n    if (xAxisTickShow) {\n      context.lineWidth = xAxisTickLineWidth\n      context.strokeStyle = xAxisTickLineColor\n\n      if (xAxisTickShowIndex && xAxisTickShowIndex.length) {\n        // 存在控制显示的下标数组\n        xAxisTickShowIndex.forEach(showIndex => {\n          let item = xAxisTickPoint[showIndex]\n\n          context.beginPath()\n          context.moveTo(item.startX, item.startY)\n          context.lineTo(item.endX, item.endY)\n          context.closePath()\n\n          context.stroke()\n        })\n      } else {\n        xAxisTickPoint.forEach(item => {\n          context.beginPath()\n          context.moveTo(item.startX, item.startY)\n          context.lineTo(item.endX, item.endY)\n          context.closePath()\n\n          context.stroke()\n        })\n      }\n    }\n\n    if (xAxisLineShow) {\n      context.beginPath()\n      context.moveTo(xAxisLinePoint.startX, xAxisLinePoint.startY)\n      context.lineTo(xAxisLinePoint.endX, xAxisLinePoint.endY)\n      context.closePath()\n\n      context.lineWidth = xAxisLineWidth\n      context.strokeStyle = xAxisLineColor\n      context.stroke()\n    }\n\n    if (xAxisNameShow) {\n      context.save()\n      context.font = `${xAxisNameFontSize}px`\n      context.fillStyle = xAxisNameColor\n      context.textAlign = 'left'\n      context.textBaseline = 'middle'\n      context.fillText(xAxisNamePoint.text, xAxisNamePoint.x, xAxisNamePoint.y)\n      context.restore()\n    }\n  }\n\n  console.log('complete drawAxis')\n}\n","export default function drawAxisRadar() {\n  let { context, opts, chartData } = this\n  let { backgroundColor, radarAxis, categories } = opts\n  let {\n    shape: radarAxisShape,\n    splitNumber,\n    axisName: radarAxisName,\n    axisLine: radarAxisLine,\n    splitLine: radarAxisSplitLine,\n    splitArea: radarAxisSplitArea,\n  } = radarAxis\n  let { show: radarAxisNameShow, textStyle: radarAxisNameTextStyle } = radarAxisName\n  let { show: radarAxisLineShow, lineStyle: radarAxisLineStyle } = radarAxisLine\n  let { show: radarAxisSplitLineShow, lineStyle: radarAxisSplitLineStyle } = radarAxisSplitLine\n\n  let { color: radarAxisNameColor, fontSize: radarAxisNameFontSize } = radarAxisNameTextStyle\n  let { color: radarAxisLineColor, lineWidth: radarAxisLineWidth } = radarAxisLineStyle\n  let { color: radarAxisSplitLineColor, lineWidth: radarAxisSplitLineWidth } = radarAxisSplitLineStyle\n\n  let { odd, even } = radarAxisSplitArea\n  let { show: oddSplitAreaShow, color: oddSplitAreaColor, opacity: oddSplitAreaOpacity } = odd\n  let { show: evenSplitAreaShow, color: evenSplitAreaColor, opacity: evenSplitAreaOpacity } = even\n\n  let { center, radius, lineEndPosition, namePosition } = chartData.radarAxis\n  let [centerX, centerY] = center\n\n  if (radarAxisShape == 'polygon') {\n    lineEndPosition.forEach((splitPositionArr, splitIndex) => {\n      let oddOrEven = (splitNumber - splitIndex) % 2 // 0为偶数，1为奇数\n\n      context.beginPath()\n      splitPositionArr.forEach((splitPositionItem, splitPositionIndex) => {\n        if (splitPositionIndex == 0) {\n          context.moveTo(splitPositionItem.x, splitPositionItem.y)\n        } else {\n          context.lineTo(splitPositionItem.x, splitPositionItem.y)\n        }\n      })\n      context.closePath()\n\n      // draw evenSplitArea\n      if (oddOrEven === 0 && oddSplitAreaShow) {\n        context.fillStyle = backgroundColor\n        context.fill() // 避免存在透明度时，上一次绘制颜色的影响\n        context.save()\n        context.globalAlpha = evenSplitAreaOpacity\n        context.fillStyle = evenSplitAreaColor\n        context.fill()\n        context.restore()\n      }\n\n      // draw oddSplitArea\n      if (oddOrEven === 1 && evenSplitAreaShow) {\n        context.fillStyle = backgroundColor\n        context.fill() // 避免存在透明度时，上一次绘制颜色的影响\n        context.save()\n        context.globalAlpha = oddSplitAreaOpacity\n        context.fillStyle = oddSplitAreaColor == 'auto' ? backgroundColor : oddSplitAreaColor\n        context.fill()\n        context.restore()\n      }\n\n      // draw radarAxisSplitLine\n      if (radarAxisSplitLineShow) {\n        context.lineWidth = radarAxisSplitLineWidth\n        context.strokeStyle = radarAxisSplitLineColor\n        context.stroke()\n      }\n    })\n  } else {\n    for (let index = 0; index < splitNumber; index++) {\n      let scale = (splitNumber - index) / splitNumber\n      let oddOrEven = (splitNumber - index) % 2 // 0为偶数，1为奇数\n\n      context.beginPath()\n      context.arc(centerX, centerY, radius * scale, 0, Math.PI * 2)\n\n      // draw evenSplitArea\n      if (oddOrEven === 0 && oddSplitAreaShow) {\n        context.fillStyle = backgroundColor\n        context.fill() // 避免存在透明度时，上一次绘制颜色的影响\n        context.save()\n        context.globalAlpha = evenSplitAreaOpacity\n        context.fillStyle = evenSplitAreaColor\n        context.fill()\n        context.restore()\n      }\n\n      // draw oddSplitArea\n      if (oddOrEven === 1 && evenSplitAreaShow) {\n        context.fillStyle = backgroundColor\n        context.fill() // 避免存在透明度时，上一次绘制颜色的影响\n        context.save()\n        context.globalAlpha = oddSplitAreaOpacity\n        context.fillStyle = oddSplitAreaColor == 'auto' ? backgroundColor : oddSplitAreaColor\n        context.fill()\n        context.restore()\n      }\n\n      // draw radarAxisSplitLine\n      if (radarAxisSplitLineShow) {\n        context.lineWidth = radarAxisSplitLineWidth\n        context.strokeStyle = radarAxisSplitLineColor\n        context.stroke()\n      }\n    }\n  }\n\n  // draw radarAxisLine\n  if (radarAxisLineShow) {\n    lineEndPosition[0].forEach(lineEndPositionItem => {\n      context.beginPath()\n      context.moveTo(centerX, centerY)\n      context.lineTo(lineEndPositionItem.x, lineEndPositionItem.y)\n      context.lineWidth = radarAxisLineWidth\n      context.strokeStyle = radarAxisLineColor\n      context.stroke()\n    })\n  }\n\n  // draw radarAxisName\n  if (radarAxisNameShow) {\n    namePosition.forEach(namePositionItem => {\n      let { text, point, position } = namePositionItem\n      let { x: pointX } = point\n      let { x: positionX, y: positionY } = position\n\n      context.save()\n      if (positionX == centerX) {\n        context.textAlign = 'center'\n      } else if (pointX > 0) {\n        context.textAlign = 'left'\n      } else if (pointX < 0) {\n        context.textAlign = 'right'\n      }\n\n      context.textBaseline = 'middle'\n\n      context.font = `${radarAxisNameFontSize}px`\n      context.fillStyle = radarAxisNameColor\n      context.fillText(text, positionX, positionY)\n      context.restore()\n    })\n  }\n\n  console.log('complete drawAxisRadar')\n}\n","export default function drawChartPie(process) {\n  let { context, opts, chartData } = this\n  let { label: globalLabel } = opts\n  let { maxData, minData } = chartData.yAxis\n\n  chartData.chartBar.forEach(barItemArr => {\n    barItemArr.forEach(barItem => {\n      let { x, y, data, barWidth, barHeight, itemStyle } = barItem\n      let { color: barItemColor } = itemStyle\n\n      context.beginPath()\n      context.save()\n      context.fillStyle = barItemColor\n      if (maxData >= 0 && minData >= 0) {\n        context.fillRect(x - barWidth / 2, y, barWidth, -barHeight * process)\n      } else if (maxData <= 0 && minData <= 0) {\n        context.fillRect(x - barWidth / 2, y, barWidth, barHeight * process)\n      } else {\n        if (data > 0) {\n          context.fillRect(x - barWidth / 2, y, barWidth, -barHeight * process)\n        } else {\n          context.fillRect(x - barWidth / 2, y, barWidth, barHeight * process)\n        }\n      }\n\n      context.restore()\n      context.closePath()\n    })\n  })\n\n  if (process == 1) {\n    chartData.chartBar.forEach(barItemArr => {\n      barItemArr.forEach(barItem => {\n        let { x, y, barHeight, data, label, itemStyle } = barItem\n        let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = label\n        let { color: barItemColor } = itemStyle\n\n        // globalLabel 权重大于 seriesLabel\n        labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n        labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n        labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n        labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n        if (!labelShow) return\n\n        context.save()\n        context.font = `${labelFontSize}px`\n        context.fillStyle = labelColor == 'auto' ? barItemColor : labelColor\n        context.textAlign = 'center'\n        if (maxData >= 0 && minData >= 0) {\n          context.textBaseline = 'bottom'\n          context.fillText(data, x, y - barHeight - labelMargin)\n        } else if (maxData <= 0 && minData <= 0) {\n          context.textBaseline = 'top'\n          context.fillText(data, x, y + barHeight + labelMargin)\n        } else {\n          if (data > 0) {\n            context.textBaseline = 'bottom'\n            context.fillText(data, x, y - barHeight - labelMargin)\n          } else {\n            context.textBaseline = 'top'\n            context.fillText(data, x, y + barHeight + labelMargin)\n          }\n        }\n        context.restore()\n      })\n    })\n  }\n\n  console.log('complete drawChartBar', process)\n}\n","export default function drawChartLine(process) {\n  let { context, opts, chartData } = this\n  let { label: globalLabel } = opts\n  let { lineWidth: xAxisLineWidth } = opts.xAxis.axisLine.lineStyle\n  let { yZero, yStart, yEnd, maxData, minData } = chartData.yAxis\n\n  chartData.chartLine.forEach(lineItem => {\n    let { data, showIndex: dataShowIndex, itemStyle, line, symbol, area, label, smooth } = lineItem\n    let { color: lineItemColor } = itemStyle\n    let { show: lineShow, lineWidth, color: lineColor, opacity: lineOpacity } = line\n    let { show: symbolShow, type: symbolType, size: symbolSize, color: symbolColor } = symbol\n    let { show: areaShow, color: areaColor, opacity: areaOpacity } = area\n    let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = label\n\n    // globalLabel 权重大于 seriesLabel\n    labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n    labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n    labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n    labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n    if (smooth) {\n      // process更新y坐标数据\n      data = JSON.parse(JSON.stringify(data)).map(dataItem => {\n        let { y, height, value } = dataItem\n        if (maxData >= 0 && minData >= 0) {\n          dataItem.y = y + height - height * process\n        } else if (maxData <= 0 && minData <= 0) {\n          dataItem.y = y - height + height * process\n        } else {\n          if (value > 0) {\n            dataItem.y = y + height - height * process\n          } else {\n            dataItem.y = y - height + height * process\n          }\n        }\n        return dataItem\n      })\n\n      // 计算贝塞尔曲线控制点并绘制路径\n      context.beginPath()\n      data.forEach((dataItem, dataIndex, points) => {\n        function isNotMiddlePoint(points, i) {\n          if (points[i - 1] && points[i + 1]) {\n            return points[i].y >= Math.max(points[i - 1].y, points[i + 1].y) || points[i].y <= Math.min(points[i - 1].y, points[i + 1].y)\n          } else {\n            return false\n          }\n        }\n\n        const a = 0.2\n        const b = 0.2\n        let pAx = null\n        let pAy = null\n        let pBx = null\n        let pBy = null\n        let { x, y } = dataItem\n\n        if (dataIndex == 0) {\n          context.moveTo(x, y)\n        } else {\n          let i = dataIndex - 1\n          if (i < 1) {\n            pAx = points[0].x + (points[1].x - points[0].x) * a\n            pAy = points[0].y + (points[1].y - points[0].y) * a\n          } else {\n            pAx = points[i].x + (points[i + 1].x - points[i - 1].x) * a\n            pAy = points[i].y + (points[i + 1].y - points[i - 1].y) * a\n          }\n\n          if (i > points.length - 3) {\n            let last = points.length - 1\n            pBx = points[last].x - (points[last].x - points[last - 1].x) * b\n            pBy = points[last].y - (points[last].y - points[last - 1].y) * b\n          } else {\n            pBx = points[i + 1].x - (points[i + 2].x - points[i].x) * b\n            pBy = points[i + 1].y - (points[i + 2].y - points[i].y) * b\n          }\n\n          if (isNotMiddlePoint(points, i + 1)) {\n            pBy = points[i + 1].y\n          }\n          if (isNotMiddlePoint(points, i)) {\n            pAy = points[i].y\n          }\n\n          context.bezierCurveTo(pAx, pAy, pBx, pBy, x, y)\n        }\n      })\n    } else {\n      context.beginPath()\n      data.forEach((dataItem, dataIndex) => {\n        let { x, y, height, value } = dataItem\n        if (maxData >= 0 && minData >= 0) {\n          y = y + height - height * process\n        } else if (maxData <= 0 && minData <= 0) {\n          y = y - height + height * process\n        } else {\n          if (value > 0) {\n            y = y + height - height * process\n          } else {\n            y = y - height + height * process\n          }\n        }\n\n        if (dataIndex == 0) {\n          context.moveTo(x, y)\n        } else {\n          context.lineTo(x, y)\n        }\n      })\n    }\n\n    if (lineShow) {\n      context.save()\n      context.lineJoin = 'round'\n      context.globalAlpha = lineOpacity\n      context.lineWidth = lineWidth\n      context.strokeStyle = lineColor == 'auto' ? lineItemColor : lineColor\n      context.stroke()\n      context.restore()\n    }\n\n    if (areaShow) {\n      if (maxData >= 0 && minData >= 0) {\n        context.lineTo(data[data.length - 1].x, yStart - xAxisLineWidth)\n        context.lineTo(data[0].x, yStart - xAxisLineWidth)\n      } else if (maxData <= 0 && minData <= 0) {\n        context.lineTo(data[data.length - 1].x, yEnd)\n        context.lineTo(data[0].x, yEnd)\n      } else {\n        context.lineTo(data[data.length - 1].x, yZero)\n        context.lineTo(data[0].x, yZero)\n      }\n      context.closePath()\n      context.save()\n      context.globalAlpha = areaOpacity\n      context.fillStyle = areaColor == 'auto' ? lineItemColor : areaColor\n      context.fill()\n      context.restore()\n    }\n\n    if (process == 1) {\n      if (symbolShow) {\n        if (dataShowIndex && dataShowIndex.length) {\n          // 存在控制显示的下标数组\n          dataShowIndex.forEach(showIndex => {\n            let dataItem = data[showIndex]\n            let { x, y } = dataItem\n\n            switch (symbolType) {\n              case 'circle':\n                context.save()\n                context.beginPath()\n                context.arc(x, y, symbolSize / 2, 0, 2 * Math.PI)\n                context.fillStyle = symbolColor == 'auto' ? lineItemColor : symbolColor\n                context.fill()\n\n                context.beginPath()\n                context.arc(x, y, symbolSize / 4, 0, 2 * Math.PI)\n                context.fillStyle = '#fff'\n                context.fill()\n                context.restore()\n                break\n            }\n          })\n        } else {\n          switch (symbolType) {\n            case 'circle':\n              context.save()\n              data.forEach(dataItem => {\n                let { x, y } = dataItem\n                context.beginPath()\n                context.arc(x, y, symbolSize / 2, 0, 2 * Math.PI)\n                context.fillStyle = symbolColor == 'auto' ? lineItemColor : symbolColor\n                context.fill()\n\n                context.beginPath()\n                context.arc(x, y, symbolSize / 4, 0, 2 * Math.PI)\n                context.fillStyle = '#fff'\n                context.fill()\n              })\n              context.restore()\n              break\n          }\n        }\n      }\n\n      if (labelShow) {\n        context.save()\n        context.font = `${labelFontSize}px`\n        context.fillStyle = labelColor == 'auto' ? lineItemColor : labelColor\n        context.textAlign = 'center'\n\n        if (dataShowIndex && dataShowIndex.length) {\n          // 存在控制显示的下标数组\n          dataShowIndex.forEach(showIndex => {\n            let dataItem = data[showIndex]\n            let { x, y, value } = dataItem\n\n            if (maxData >= 0 && minData >= 0) {\n              context.textBaseline = 'bottom'\n              context.fillText(value, x, y - labelMargin)\n            } else if (maxData <= 0 && minData <= 0) {\n              context.textBaseline = 'top'\n              context.fillText(value, x, y + labelMargin)\n            } else {\n              if (value) {\n                context.textBaseline = 'bottom'\n                context.fillText(value, x, y - labelMargin)\n              } else {\n                context.textBaseline = 'top'\n                context.fillText(value, x, y + labelMargin)\n              }\n            }\n          })\n        } else {\n          data.forEach(dataItem => {\n            let { x, y, value } = dataItem\n\n            if (maxData >= 0 && minData >= 0) {\n              context.textBaseline = 'bottom'\n              context.fillText(value, x, y - labelMargin)\n            } else if (maxData <= 0 && minData <= 0) {\n              context.textBaseline = 'top'\n              context.fillText(value, x, y + labelMargin)\n            } else {\n              if (value) {\n                context.textBaseline = 'bottom'\n                context.fillText(value, x, y - labelMargin)\n              } else {\n                context.textBaseline = 'top'\n                context.fillText(value, x, y + labelMargin)\n              }\n            }\n          })\n        }\n\n        context.restore()\n      }\n    }\n  })\n\n  console.log('complete drawChartLine', process)\n}\n","import { avoidCollision, convertCoordinateOrigin } from '../../util/util'\n\nexport default function drawChartPie(process) {\n  let { context, opts, chartData } = this\n  let { backgroundColor, label: globalLabel } = opts\n  let { data, center, radius, format, offsetAngle, disablePieStroke, valueSum } = chartData.chartPie\n  let [centerX, centerY] = center\n  let [radiusMin, radiusMax] = radius\n  let _start_ = 0\n\n  data.forEach(dataItem => {\n    dataItem._proportion_ = (dataItem.value / valueSum) * process\n    dataItem._start_ = _start_\n    if (offsetAngle !== 0) {\n      dataItem._start_ += (offsetAngle * Math.PI) / 180\n    }\n\n    context.beginPath()\n\n    context.moveTo(centerX, centerY)\n    context.arc(centerX, centerY, radiusMax, dataItem._start_, dataItem._start_ + 2 * dataItem._proportion_ * Math.PI)\n    context.lineWidth = 2\n    context.strokeStyle = backgroundColor\n    context.fillStyle = dataItem.itemStyle.color\n    context.fill()\n    if (!disablePieStroke) {\n      context.stroke()\n    }\n\n    if (radiusMin > 0) {\n      context.beginPath()\n      context.moveTo(centerX, centerY)\n      context.arc(centerX, centerY, radiusMin, dataItem._start_, dataItem._start_ + 2 * dataItem._proportion_ * Math.PI)\n      context.fillStyle = backgroundColor\n      context.fill()\n    }\n\n    _start_ += 2 * dataItem._proportion_ * Math.PI\n  })\n\n  // 绘制文本标签\n  if (process == 1) {\n    let { label: seriesLabel, labelLine } = chartData.chartPie\n    let { show: labelShow, fontSize: labelFontSize, color: labelColor, margin: labelMargin } = seriesLabel\n    let { length1, length2, lineWidth, lineDotRadius } = labelLine\n    let lineRadius = radiusMax + length1\n    let lastOrigin = null\n\n    // globalLabel 权重大于 seriesLabel\n    labelShow = globalLabel && typeof globalLabel.show == 'boolean' ? globalLabel.show : labelShow\n    labelFontSize = globalLabel && globalLabel.fontSize ? globalLabel.fontSize : labelFontSize\n    labelColor = globalLabel && globalLabel.color ? globalLabel.color : labelColor\n    labelMargin = globalLabel && globalLabel.margin ? globalLabel.margin : labelMargin\n\n    if (!labelShow) return\n\n    data.forEach((dataItem, dataIndex) => {\n      let arc = 2 * Math.PI - (dataItem._start_ + (2 * Math.PI * dataItem._proportion_) / 2)\n      let text = format ? format(dataItem.value, name) : `${(+dataItem._proportion_ * 100).toFixed(2)}%`\n\n      // length1 start\n      let length1StartOrigin = {\n        x: Math.cos(arc) * radiusMax,\n        y: Math.sin(arc) * radiusMax,\n      }\n      // length2 start\n      let length2StartOrigin = {\n        x: Math.cos(arc) * lineRadius,\n        y: Math.sin(arc) * lineRadius,\n      }\n      // length2 end\n      let length2EndOrigin = {\n        x: length2StartOrigin.x >= 0 ? length2StartOrigin.x + length2 : length2StartOrigin.x - length2,\n        y: length2StartOrigin.y,\n      }\n\n      length2EndOrigin = avoidCollision(length2EndOrigin, lastOrigin, Math.max(lineDotRadius, labelFontSize / 2) * 2)\n      lastOrigin = length2EndOrigin\n\n      let length1StartPosition = convertCoordinateOrigin(length1StartOrigin, center)\n      let length2StartPosition = convertCoordinateOrigin(length2StartOrigin, center)\n      let length2EndPosition = convertCoordinateOrigin(length2EndOrigin, center)\n\n      // text start\n      context.font = `${labelFontSize}px`\n      let textWidth = context.measureText(text).width\n      let textStartPosition = Object.assign({}, length2EndPosition)\n      if (length2EndOrigin.x > 0) {\n        textStartPosition.x += lineDotRadius + labelMargin\n      } else {\n        textStartPosition.x -= textWidth + lineDotRadius + labelMargin\n      }\n\n      context.beginPath()\n      context.moveTo(length1StartPosition.x, length1StartPosition.y)\n      context.quadraticCurveTo(length2StartPosition.x, length2StartPosition.y, length2EndPosition.x, length2EndPosition.y)\n      context.lineWidth = lineWidth\n      context.strokeStyle = dataItem.itemStyle.color\n      context.stroke()\n      context.closePath()\n\n      context.beginPath()\n      context.moveTo(length2EndPosition.x, length2EndPosition.y)\n      context.arc(length2EndPosition.x, length2EndPosition.y, lineDotRadius, 0, 2 * Math.PI)\n      context.closePath()\n      context.fillStyle = dataItem.itemStyle.color\n      context.fill()\n\n      context.font = `${labelFontSize}px`\n      context.textBaseline = 'middle'\n      context.fillStyle = labelColor == 'auto' ? dataItem.itemStyle.color : labelColor\n      context.fillText(text, textStartPosition.x, textStartPosition.y)\n    })\n  }\n\n  console.log('complete drawChartPie', process)\n}\n","import { convertCoordinateOrigin } from '../../util/util'\n\nexport default function drawChartRadar(process) {\n  let { context, chartData } = this\n  let { center } = chartData.radarAxis\n\n  chartData.chartRadar.forEach(radarItem => {\n    console.log(1111, radarItem)\n    let { dataPosition, itemStyle, area, line, symbol } = radarItem\n    let { show: areaShow, color: areaColor, opacity: areaOpactiy } = area\n    let { show: lineShow, lineWidht, color: lineColor, opacity: lineOpacity } = line\n    let { show: symbolShow, type: symbolType, size: symbolSize, color: symbolColor } = symbol\n\n    context.beginPath()\n    dataPosition.forEach((dataItem, dataIndex) => {\n      let point = JSON.parse(JSON.stringify(dataItem.point))\n      point.x = point.x * process\n      point.y = point.y * process\n\n      let position = convertCoordinateOrigin(point, center)\n      let { x: positionX, y: positionY } = position\n      dataItem.position = position\n\n      if (dataIndex == 0) {\n        context.moveTo(positionX, positionY)\n      } else {\n        context.lineTo(positionX, positionY)\n      }\n    })\n    context.closePath()\n\n    if (areaShow) {\n      context.save()\n      context.globalAlpha = areaOpactiy\n      context.fillStyle = areaColor == 'auto' ? itemStyle.color : areaColor\n      context.fill()\n      context.stroke()\n      context.restore()\n    }\n\n    if (lineShow) {\n      context.save()\n      context.lineWidht = lineWidht\n      context.globalAlpha = lineOpacity\n      context.strokeStyle = lineColor == 'auto' ? itemStyle.color : lineColor\n      context.stroke()\n      context.restore()\n    }\n\n    if (process == 1) {\n      if (symbolShow) {\n        switch (symbolType) {\n          case 'circle':\n            context.save()\n            dataPosition.forEach(dataItem => {\n              let { x: positionX, y: positionY } = dataItem.position\n              context.beginPath()\n              context.arc(positionX, positionY, symbolSize / 2, 0, Math.PI * 2)\n              context.fillStyle = symbolColor == 'auto' ? itemStyle.color : symbolColor\n              context.fill()\n\n              context.beginPath()\n              context.arc(positionX, positionY, symbolSize / 4, 0, Math.PI * 2)\n              context.fillStyle = '#fff'\n              context.fill()\n            })\n            context.restore()\n            break\n        }\n      }\n    }\n  })\n\n  console.log('complete drawChartRadar', process)\n}\n","import Animation from '../../util/animation'\n\nimport calSeriesColor from '../../calculate/calSeriesColor'\nimport calLegendData from '../../calculate/calLegendData'\nimport calAxisData from '../../calculate/calAxisData'\nimport calAxisRadarData from '../../calculate/calAxisRadarData'\n\nimport calChartBarData from '../../calculate/calChartBarData'\nimport calChartLineData from '../../calculate/calChartLineData'\nimport calChartPieData from '../../calculate/calChartPieData'\nimport calChartRadarData from '../../calculate/calChartRadarData'\n\nimport drawBackground from '../drawBackground'\nimport drawLegend from '../drawLegend'\nimport drawAxis from '../drawAxis'\nimport drawAxisRadar from '../drawAxisRadar'\n\nimport drawChartBar from './drawChartBar'\nimport drawChartLine from './drawChartLine'\nimport drawChartPie from './drawChartPie'\nimport drawChartRadar from './drawChartRadar'\n\nexport default function drawCharts() {\n  let { type, animation, animationDuration, animationTiming } = this.opts\n  let onProcessFn = function() {}\n\n  this.animationInstance && this.animationInstance.stop()\n\n  calSeriesColor.call(this)\n  calLegendData.call(this)\n\n  switch (type) {\n    case 'bar':\n      calAxisData.call(this)\n      calChartBarData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawAxis.call(this)\n        drawChartBar.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n    case 'line':\n      calAxisData.call(this)\n      calChartLineData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawAxis.call(this)\n        drawChartLine.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n    case 'pie':\n      calChartPieData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawChartPie.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n    case 'radar':\n      calAxisRadarData.call(this)\n      calChartRadarData.call(this)\n\n      onProcessFn = process => {\n        drawBackground.call(this)\n        drawAxisRadar.call(this)\n        drawChartRadar.call(this, process)\n\n        if (process == 1) {\n          drawLegend.call(this)\n        }\n      }\n      break\n  }\n\n  this.animationInstance = new Animation({\n    type,\n    animation,\n    animationDuration,\n    animationTiming,\n    onProcess: onProcessFn,\n    onAnimationFinish: () => {\n      this.event.trigger('renderComplete')\n    },\n  })\n}\n","import Event from './util/event'\nimport Config from './config'\nimport { replenishData, calOptions, calSeries } from './calculate/calOptions'\nimport drawCharts from './draw/drawCharts/drawCharts'\n\nclass Charts {\n  constructor(opts = {}) {\n    this.config = Object.assign({}, Config)\n    this.opts = Object.assign({}, opts)\n    this.context = this.opts.element.getContext('2d')\n    this.chartData = {}\n\n    // 绑定事件\n    this.event = new Event()\n    this.event.addEventListener('renderComplete', opts.onRenderComplete)\n\n    // 将opts的数据补充完整\n    calOptions.call(this)\n\n    // 绘制图表\n    drawCharts.call(this)\n  }\n\n  updateData(data = {}) {\n    let { opts, config } = this\n\n    Object.keys(data).forEach(dataKey => {\n      if (dataKey == 'series') {\n        opts.series = JSON.parse(JSON.stringify(data.series))\n        calSeries.call(this)\n      } else {\n        replenishData(dataKey, data, opts, true)\n      }\n    })\n\n    drawCharts.call(this)\n  }\n}\n\nexport default Charts\n"],"names":["Event","[object Object]","this","events","type","listener","push","params","forEach","apply","e","console","error","animation","animationDuration","animationTiming","backgroundColor","colors","label","show","fontSize","color","margin","legend","marginTop","itemGap","shapeWidth","shapeHeight","textStyle","padding","bar","barMaxWidth","barMinWidth","barWidth","barGap","pie","center","radius","offsetAngle","disablePieStroke","labelLine","lineDotRadius","lineWidth","length1","length2","line","showIndex","smooth","connectNulls","opacity","symbol","size","area","radar","radarAxis","shape","max","splitNumber","axisName","axisLine","lineStyle","splitLine","splitArea","odd","even","xAxis","boundaryGap","text","gap","axisLabel","rotate","axisTick","alignWithLabel","length","axisSplitLine","yAxis","min","align","convertCoordinateOrigin","origin","centerX","centerY","x","y","isCollision","souce","target","distance","percentToNum","percent","String","replace","Number","isObject","data","Object","prototype","toString","call","isArray","replenishData","key","sources","isCover","keys","_key","sourcesItem","sourcesIndex","concat","assign","calOptions","config","opts","calSeries","series","seriesItem","easeIn","pos","Math","pow","easeOut","easeInOut","linear","Animation","isStop","onProcess","onAnimationFinish","animationFrame","requestAnimationFrame","setTimeout","step","timeStamp","Date","timingFunction","Timing","startTimeStamp","process","bind","calSeriesColor","colorsLength","dataItem","dataIndex","itemStyle","seriesIndex","calLegendData","context","width","seriesDataList","legendWidth","legendWidthNum","legendList","currentRow","font","seriesDataItem","name","measureText","itemWidth","obj","legendData","legendHeight","calAxisYData","chartData","height","categories","xAxisShow","format","xAxisFormat","xAxisName","xAxisLabel","xAxisTick","xAxisLine","xAxisSplitLine","yAxisShow","yAxisFormat","yAxisName","yAxisLabel","yAxisTick","yAxisLine","yAxisSplitLine","xAxisNameShow","xAxisNameText","xAxisNameGap","xAxisNameTextStyle","xAxisLabelShow","xAxisLabelGap","xAxisLabelRotate","xAxisLabelTextStyle","xAxisTickShow","xAxisTickLength","xAxisTickStyle","xAxisLineShow","xAxisLineStyle","xAxisSplitLineShow","xAxisSplitLineStyle","yAxisNameShow","yAxisNameText","yAxisNameGap","yAxisNameTextStyle","yAxisLabelShow","yAxisLabelGap","yAxisLabelTextStyle","yAxisTickShow","yAxisTickLength","yAxisTickStyle","yAxisLineShow","yAxisLineStyle","yAxisSplitLineShow","yAxisSplitLineStyle","xAxisNameFontSize","xAxisLabelFontSize","xAxisTickLineWidth","xAxisLineWidth","xAxisSplitLineWidth","yAxisNameFontSize","yAxisLabelFontSize","yAxisTickLineWidth","yAxisLineWidth","yAxisSplitLineWidth","xStart","xEnd","yStart","yEnd","xStartInit","yStartInit","xSpacingNumber","xSpacing","xEachSpacing","xAxisLabelMaxHeight","xAxisLabelMaxWidht","xAxisNameTextWidth","isSamePart","yZero","plusSpacing","minusSpacing","yAxisLabelText","yAxisLabelMaxWidth","ySpacing","yEachSpacing","maxData","minData","dataRange","dataEachRange","limit","multiple","xAxisLabelPoint","xAxisTickPoint","xAxisLinePoint","xAxisSplitLinePoint","xAxisNamePoint","yAxisLabelPoint","yAxisTickPoint","yAxisLinePoint","yAxisSplitLinePoint","yAxisNamePoint","allDataArr","reduce","ceil","floor","i","num","toFixed","unshift","item","abs","sin","PI","cos","arr","index","_xStart","startX","startY","endX","endY","_yStart","xAxisSplitLineNumber","xAxisTickNumber","calAxisRadarData","radarAxisName","JSON","parse","stringify","radarAxisNameShow","radarAxisNameTextStyle","radarAxisNameFontSize","radarAxisNameMargin","lineEndPosition","namePosition","spacingAangle","start","scale","endPoint","point","position","calChartBarData","autoWidth","autoWidthNumber","sumWidth","chartBar","chartBarArr","barItemArr","barItem","barHeight","calChartLineData","chartLine","chartLineArr","dataArr","itemHeight","value","calChartPieData","chartPie","radius1","radius2","valueSum","sum","calChartRadarData","chartRadar","map","radarItem","dataPosition","drawBackground","fillStyle","fillRect","drawLegend","legendType","legendHeightMax","listItem","listIndex","legendItem","beginPath","moveTo","arc","closePath","fill","lineLength","lineTo","strokeStyle","stroke","save","textAlign","textBaseline","fillText","restore","drawAxisY","xAxisLabelShowIndex","xAxisTickShowIndex","xAxisSplitShowIndex","xAxisNameColor","xAxisLabelColor","xAxisTickLineColor","xAxisLineColor","xAxisSplitLineColor","yAxisNameColor","yAxisLabelColor","yAxisTickLineColor","yAxisLineColor","yAxisSplitLineColor","translate","drawAxisRadar","radarAxisShape","radarAxisLine","radarAxisSplitLine","radarAxisSplitArea","radarAxisLineShow","radarAxisLineStyle","radarAxisSplitLineShow","radarAxisSplitLineStyle","radarAxisNameColor","radarAxisLineColor","radarAxisLineWidth","radarAxisSplitLineColor","radarAxisSplitLineWidth","oddSplitAreaShow","oddSplitAreaColor","oddSplitAreaOpacity","evenSplitAreaShow","evenSplitAreaColor","evenSplitAreaOpacity","splitPositionArr","splitIndex","oddOrEven","splitPositionItem","splitPositionIndex","globalAlpha","lineEndPositionItem","namePositionItem","pointX","positionX","positionY","drawChartPie","globalLabel","barItemColor","labelShow","labelFontSize","labelColor","labelMargin","drawChartLine","lineItem","dataShowIndex","lineItemColor","lineShow","lineColor","lineOpacity","symbolShow","symbolType","symbolSize","symbolColor","areaShow","areaColor","areaOpacity","points","isNotMiddlePoint","a","b","pAx","pAy","pBx","pBy","last","bezierCurveTo","lineJoin","radiusMin","radiusMax","_start_","_proportion_","seriesLabel","lineRadius","lastOrigin","length1StartOrigin","length2StartOrigin","length2EndOrigin","avoidCollision","length1StartPosition","length2StartPosition","length2EndPosition","textWidth","textStartPosition","quadraticCurveTo","drawChartRadar","areaOpactiy","lineWidht","drawCharts","onProcessFn","animationInstance","stop","calAxisData","drawAxis","drawChartBar","event","trigger","Config","element","getContext","addEventListener","onRenderComplete","dataKey"],"mappings":"AAAe,MAAMA,EACnBC,cACEC,KAAKC,OAAS,GAQhBF,iBAAiBG,EAAMC,EAAW,cAChCH,KAAKC,OAAOC,GAAQF,KAAKC,OAAOC,IAAS,GACzCF,KAAKC,OAAOC,GAAME,KAAKD,GAQzBJ,QAAQG,KAASG,GACTL,KAAKC,OAAOC,IAChBF,KAAKC,OAAOC,GAAMI,QAAQH,IACxB,IACEA,EAASI,MAAM,KAAMF,GACrB,MAAOG,GACPC,QAAQC,MAAMF,OC1BxB,MAAe,CACbG,WAAW,EACXC,kBAAmB,IACnBC,gBAAiB,UACjBC,gBAAiB,UACjBC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEC,MAAO,CACLC,MAAM,EACNC,SAAU,GACVC,MAAO,OACPC,OAAQ,GAEVC,OAAQ,CACNJ,MAAM,EACNf,KAAM,UACNoB,UAAW,EACXC,QAAS,GACTC,WAAY,GACZC,YAAa,GACbC,UAAW,CACTR,SAAU,GACVC,MAAO,UACPQ,QAAS,IAGbA,QAAS,CAAC,GAAI,GAAI,GAAI,IACtBC,IAAK,CACHC,YAAa,GACbC,YAAa,EACbC,SAAU,OACVC,OAAQ,GAEVC,IAAK,CACHC,OAAQ,CAAC,MAAO,OAChBC,OAAQ,CAAC,EAAG,OACZC,YAAa,EACbC,kBAAkB,EAClBC,UAAW,CACTC,cAAe,EACfC,UAAW,EACXC,QAAS,GACTC,QAAS,KAGbC,KAAM,CACJC,UAAW,GACXC,QAAQ,EACRC,cAAc,EACdH,KAAM,CACJ1B,MAAM,EACNuB,UAAW,EACXrB,MAAO,OACP4B,QAAS,GAEXC,OAAQ,CACN/B,MAAM,EACNf,KAAM,SACN+C,KAAM,EACN9B,MAAO,QAET+B,KAAM,CACJjC,MAAM,EACNE,MAAO,OACP4B,QAAS,KAGbI,MAAO,CACLD,KAAM,CACJjC,MAAM,EACNE,MAAO,OACP4B,QAAS,IAEXJ,KAAM,CACJ1B,MAAM,EACNuB,UAAW,EACXrB,MAAO,OACP4B,QAAS,GAEXC,OAAQ,CACN/B,MAAM,EACNf,KAAM,SACN+C,KAAM,EACN9B,MAAO,SAGXiC,UAAW,CACTC,MAAO,UACPnB,OAAQ,CAAC,MAAO,OAChBC,OAAQ,MACRmB,IAAK,OACLC,YAAa,EACbC,SAAU,CACRvC,MAAM,EACNS,UAAW,CACTR,SAAU,GACVC,MAAO,UACPC,OAAQ,KAGZqC,SAAU,CACRxC,MAAM,EACNyC,UAAW,CACTlB,UAAW,EACXrB,MAAO,UACP4B,QAAS,IAGbY,UAAW,CACT1C,MAAM,EACNyC,UAAW,CACTlB,UAAW,EACXrB,MAAO,UACP4B,QAAS,IAGba,UAAW,CACTC,IAAK,CACH5C,MAAM,EACNE,MAAO,UACP4B,QAAS,GAEXe,KAAM,CACJ7C,MAAM,EACNE,MAAO,UACP4B,QAAS,KAIfgB,MAAO,CACL9C,MAAM,EACN+C,aAAa,EACbR,SAAU,CACRvC,MAAM,EACNgD,KAAM,OACNC,IAAK,GACLxC,UAAW,CACTP,MAAO,UACPD,SAAU,KAGdiD,UAAW,CACTlD,MAAM,EACN2B,UAAW,GACXwB,OAAQ,EACRF,IAAK,EACLxC,UAAW,CACTP,MAAO,UACPD,SAAU,KAGdmD,SAAU,CACRpD,MAAM,EACN2B,UAAW,GACX0B,gBAAgB,EAChBC,OAAQ,EACRb,UAAW,CACTlB,UAAW,EACXrB,MAAO,YAGXsC,SAAU,CACRxC,MAAM,EACNyC,UAAW,CACTlB,UAAW,EACXrB,MAAO,YAGXqD,cAAe,CACbvD,MAAM,EACN2B,UAAW,GACXc,UAAW,CACTlB,UAAW,EACXrB,MAAO,aAIbsD,MAAO,CACLxD,MAAM,EACNqC,IAAK,OACLoB,IAAK,OACLnB,YAAa,EACbC,SAAU,CACRvC,MAAM,EACNgD,KAAM,OACNC,IAAK,GACLxC,UAAW,CACTP,MAAO,UACPD,SAAU,GACVyD,MAAO,WAGXR,UAAW,CACTlD,MAAM,EACNiD,IAAK,EACLxC,UAAW,CACTP,MAAO,UACPD,SAAU,KAGdmD,SAAU,CACRpD,MAAM,EACNsD,OAAQ,EACRb,UAAW,CACTlB,UAAW,EACXrB,MAAO,YAGXsC,SAAU,CACRxC,MAAM,EACNyC,UAAW,CACTlB,UAAW,EACXrB,MAAO,YAGXqD,cAAe,CACbvD,MAAM,EACNyC,UAAW,CACTlB,UAAW,EACXrB,MAAO,cCrNR,SAASyD,EAAwBC,EAAQ3C,GAC9C,IAAK4C,EAASC,GAAW7C,EAEzB,MAAO,CACL8C,EAAGF,EAAUD,EAAOG,EACpBC,EAAGF,EAAUF,EAAOI,GAUxB,SAAgBC,EAAYC,EAAOC,EAAQC,GACzC,IAAIH,GAAc,EAOlB,OANIC,EAAMH,EAAI,GAAKI,EAAOJ,EAAI,EAC5BE,EAAcC,EAAMF,EAAII,EAAWD,EAAOH,EACjCE,EAAMH,EAAI,GAAKI,EAAOJ,EAAI,IACnCE,EAAcC,EAAMF,EAAII,EAAWD,EAAOH,GAGrCC,EA0BF,SAASI,EAAaC,GAO3B,OANMA,GACJA,EAAUC,OAAOD,GAASE,QAAQ,IAAK,IACvCF,EAAUG,OAAOH,GAAW,KAE5BA,EAAU,EAELA,EAOF,SAASI,EAASC,GACvB,MAAgD,oBAAzCC,OAAOC,UAAUC,SAASC,KAAKJ,GAOjC,SAASK,EAAQL,GACtB,MAAgD,mBAAzCC,OAAOC,UAAUC,SAASC,KAAKJ,GCpEjC,SAASM,EAAcC,EAAKC,EAAShB,EAAQiB,GAAU,GACvDjB,EAAOe,IAAwB,IAAhBf,EAAOe,IAA8B,KAAhBf,EAAOe,IAAsC,kBAAhBf,EAAOe,GAavEE,EACEV,EAASS,EAAQD,IACnBN,OAAOS,KAAKF,EAAQD,IAAM7F,QAAQiG,IAChCL,EAAcK,EAAMH,EAAQD,GAAMf,EAAOe,GAAME,KAExCJ,EAAQG,EAAQD,IACd,UAAPA,EACFC,EAAQD,GAAK7F,QAAQ,CAACkG,EAAaC,KACjCZ,OAAOS,KAAKE,GAAalG,QAAQiG,IAC/BL,EAAcK,EAAMH,EAAQD,GAAKM,GAAerB,EAAOe,GAAKM,IAAe,OAI/ErB,EAAOe,GAAO,GAAGO,OAAON,EAAQD,IAGlCf,EAAOe,GAAOC,EAAQD,GAGpBR,EAASP,EAAOe,KAClBN,OAAOS,KAAKF,EAAQD,IAAM7F,QAAQiG,IAChCL,EAAcK,EAAMH,EAAQD,GAAMf,EAAOe,GAAME,KA/BjDV,EAASS,EAAQD,IACnBf,EAAOe,GAAON,OAAOc,OAAO,GAAIP,EAAQD,IAC/BF,EAAQG,EAAQD,IACzBf,EAAOe,GAAO,GAAGO,OAAON,EAAQD,IAEhCf,EAAOe,GAAOC,EAAQD,GAoC5B,SAAgBS,IACd,IAAIC,OAAEA,EAAMC,KAAEA,GAAS9G,KAUvB,OARAkG,EAAc,YAAaW,EAAQC,GACnCZ,EAAc,oBAAqBW,EAAQC,GAC3CZ,EAAc,kBAAmBW,EAAQC,GACzCZ,EAAc,kBAAmBW,EAAQC,GACzCZ,EAAc,SAAUW,EAAQC,GAChCZ,EAAc,UAAWW,EAAQC,GACjCZ,EAAc,SAAUW,EAAQC,GAExBA,EAAK5G,MACX,IAAK,MAIL,IAAK,OACHgG,EAAc,QAASW,EAAQC,GAC/BZ,EAAc,QAASW,EAAQC,GAC/B,MACF,IAAK,MACH,MACF,IAAK,QACHZ,EAAc,YAAaW,EAAQC,GAIvCC,EAAUf,KAAKhG,MAQjB,SAAgB+G,IACd,IAAIF,OAAEA,EAAMC,KAAEA,GAAS9G,KAEvB,OAAQ8G,EAAK5G,MACX,IAAK,MACH4G,EAAKE,OAAO1G,QAAQ2G,IAClBf,EAAc,QAASW,EAAQI,GAC/Bf,EAAc,cAAeW,EAAOjF,IAAKqF,GACzCf,EAAc,cAAeW,EAAOjF,IAAKqF,GACzCf,EAAc,WAAYW,EAAOjF,IAAKqF,GACtCf,EAAc,SAAUW,EAAOjF,IAAKqF,KAEtC,MACF,IAAK,OACHH,EAAKE,OAAO1G,QAAQ2G,IAClBf,EAAc,QAASW,EAAQI,GAC/Bf,EAAc,SAAUW,EAAOlE,KAAMsE,GACrCf,EAAc,eAAgBW,EAAOlE,KAAMsE,GAC3Cf,EAAc,OAAQW,EAAOlE,KAAMsE,GACnCf,EAAc,SAAUW,EAAOlE,KAAMsE,GACrCf,EAAc,OAAQW,EAAOlE,KAAMsE,KAErC,MACF,IAAK,MACHH,EAAKE,OAAO1G,QAAQ2G,IAClBf,EAAc,QAASW,EAAQI,GAC/Bf,EAAc,SAAUW,EAAO5E,IAAKgF,GACpCf,EAAc,SAAUW,EAAO5E,IAAKgF,GACpCf,EAAc,YAAaW,EAAO5E,IAAKgF,GACvCf,EAAc,cAAeW,EAAO5E,IAAKgF,GACzCf,EAAc,mBAAoBW,EAAO5E,IAAKgF,KAEhD,MACF,IAAK,QACHH,EAAKE,OAAO1G,QAAQ2G,IAClBf,EAAc,QAASW,EAAQI,GAC/Bf,EAAc,OAAQW,EAAO1D,MAAO8D,GACpCf,EAAc,SAAUW,EAAO1D,MAAO8D,GACtCf,EAAc,OAAQW,EAAO1D,MAAO8D,MC/H5C,MAAe,CACbC,OAAQ,SAASC,GACf,OAAOC,KAAKC,IAAIF,EAAK,IAEvBG,QAAS,SAASH,GAChB,OAAOC,KAAKC,IAAIF,EAAM,EAAG,GAAK,GAEhCI,UAAW,SAASJ,GAClB,OAAKA,GAAO,IAAO,EACV,GAAMC,KAAKC,IAAIF,EAAK,GAEpB,IAAOC,KAAKC,IAAIF,EAAM,EAAG,GAAK,IAGzCK,OAAQ,SAASL,GACf,OAAOA,ICbI,MAAMM,EACnB1H,YAAY+G,GACV9G,KAAK0H,QAAS,EAEd,IAAIxH,KAAEA,EAAIS,UAAEA,EAASC,kBAAEA,EAAiBC,gBAAEA,EAAe8G,UAAEA,EAASC,kBAAEA,GAAsBd,EAkBxFe,EAfmC,oBAA1BC,sBACFA,sBACwB,oBAAfC,WACT,SAASC,GACdD,YAAW,WACT,IAAIE,GAAa,IAAIC,KACrBF,EAAKC,KACJ,KAGE,SAASD,GACdA,EAAK,OAMX,GAAIrH,EAAW,CACb,GAAuB,WAAnBE,EACF,OAAQX,GACN,IAAK,MACL,IAAK,OACHW,EAAkB,SAClB,MACF,IAAK,MACL,IAAK,QACHA,EAAkB,YAIxB,IAAIsH,EAAiBC,EAAOvH,GACxBwH,EAAiB,KAEjBL,EAAO,WACT,IAAoB,IAAhBhI,KAAK0H,OAGP,OAFAC,EAAU,QACVC,IAIF,IAAIK,GAAa,IAAIC,KAGrB,GAFKG,IAAgBA,EAAiBJ,GAElCA,EAAYI,EAAiBzH,EAAmB,CAClD,IAAI0H,GAAWL,EAAYI,GAAkBzH,EAC7C0H,EAAUH,EAAeG,GACzBxB,EAAKa,UAAUW,GACfT,EAAeG,QAEfL,EAAU,GACVC,KAGJI,EAAOA,EAAKO,KAAKvI,MAEjB6H,EAAeG,QAEfL,EAAU,GACVC,IAOJ7H,OACEC,KAAK0H,QAAS,GC3EH,SAASc,IACtB,MAAMzH,EAASf,KAAK8G,KAAK/F,OACnB0H,EAAe1H,EAAOwD,OAEN,OAAlBvE,KAAK8G,KAAK5G,KACZF,KAAK8G,KAAKE,OAAO1G,QAAQ2G,IACvBA,EAAWrB,KAAKtF,QAAQ,CAACoI,EAAUC,KACjCD,EAASE,UAAYF,EAASE,WAAa,GACtCF,EAASE,UAAUzH,QACtBuH,EAASE,UAAUzH,MAAQJ,EAAO4H,EAAYF,QAKpDzI,KAAK8G,KAAKE,OAAO1G,QAAQ,CAAC2G,EAAY4B,KACpC5B,EAAW2B,UAAY3B,EAAW2B,WAAa,GAC1C3B,EAAW2B,UAAUzH,QACxB8F,EAAW2B,UAAUzH,MAAQJ,EAAO8H,EAAcJ,MCjB3C,SAASK,IACtB,GAAI9I,KAAK8G,KAAKzF,OAAOJ,KAAM,CACzB,IAAI8H,QAAEA,EAAOjC,KAAEA,GAAS9G,MACpBE,KAAEA,EAAI8I,MAAEA,EAAK3H,OAAEA,EAAM2F,OAAEA,GAAWF,GAClCtF,WAAEA,EAAUC,YAAEA,EAAWF,QAAEA,EAAOD,UAAEA,EAASI,UAAEA,GAAcL,GAC7DH,SAAEA,EAAQS,QAAEA,GAAYD,EACxBuH,EAAiB,GACjBC,EAAc,EACdC,EAAiB,EACjBC,EAAa,GACbC,EAAa,GAEjBN,EAAQO,KAAO,GAAGpI,MAGhB+H,EADU,OAAR/I,EACe8G,EAAO,GAAGpB,KAEVoB,EAGnBiC,EAAe3I,QAAQiJ,IACrB,IAAIC,KAAEA,EAAIZ,UAAEA,GAAcW,EACtBE,EAAczJ,KAAK+I,QAAQU,YAAYD,GAAQ,IAAIR,MACnDU,EAAYlI,EAAaG,EAAUJ,EAAUkI,EAE7CE,EAAM,CACRH,KAAAA,EACAC,YAAAA,EACAb,UAAAA,GAGEO,EAAiBO,EAAYV,GAC/BI,EAAWhJ,KAAKiJ,GAChBF,EAAiBO,EACjBL,EAAa,CAACM,KAEdR,GAAkBO,EAClBR,EAAc9B,KAAK9D,IAAI4F,EAAaC,GACpCE,EAAWjJ,KAAKuJ,MAIK,GAArBP,EAAW7E,QACb6E,EAAWhJ,KAAKiJ,GAElBrJ,KAAK4J,WAAa,CAChBR,WAAAA,EACAF,YAAaA,EAAc3H,EAC3BsI,aAAcT,EAAW7E,OAAS6C,KAAK9D,IAAI7B,EAAaP,IAAakI,EAAW7E,OAAS,GAAKhD,EAAUD,QAG1GtB,KAAK4J,WAAa,CAChBR,WAAY,GACZF,YAAa,EACbW,aAAc,GCtDL,SAASC,IACtB,IAAIf,QAAEA,EAAOjC,KAAEA,EAAI8C,WAAEA,EAAUG,UAAEA,GAAc/J,MAC3CgJ,MAAEA,EAAKgB,OAAEA,EAAMjG,MAAEA,EAAKU,MAAEA,EAAK9C,QAAEA,EAAOsI,WAAEA,EAAUjD,OAAEA,GAAWF,GAGjE7F,KAAMiJ,EACNC,OAAQC,EACR5G,SAAU6G,EACVlG,UAAWmG,EACXjG,SAAUkG,EACV9G,SAAU+G,EACVhG,cAAeiG,EAAczG,YAC7BA,GACED,GAGF9C,KAAMyJ,EAASpH,IACfA,EAAGoB,IACHA,EAAGnB,YACHA,EACA4G,OAAQQ,EACRnH,SAAUoH,EACVzG,UAAW0G,EACXxG,SAAUyG,EACVrH,SAAUsH,EACVvG,cAAewG,GACbvG,GAEExD,KAAMgK,EAAehH,KAAMiH,EAAehH,IAAKiH,EAAczJ,UAAW0J,GAAuBf,GAC/FpJ,KAAMoK,EAAgBnH,IAAKoH,EAAelH,OAAQmH,EAAkB7J,UAAW8J,GAAwBlB,GACvGrJ,KAAMwK,EAAelH,OAAQmH,EAAiBhI,UAAWiI,EAAcrH,eAAEA,GAAmBiG,GAC5FtJ,KAAM2K,EAAelI,UAAWmI,GAAmBrB,GACnDvJ,KAAM6K,EAAoBpI,UAAWqI,GAAwBtB,GAE7DxJ,KAAM+K,EAAe/H,KAAMgI,EAAe/H,IAAKgI,EAAcxK,UAAWyK,GAAuBvB,GAC/F3J,KAAMmL,EAAgBlI,IAAKmI,EAAe3K,UAAW4K,GAAwBzB,GAC7E5J,KAAMsL,EAAehI,OAAQiI,EAAiB9I,UAAW+I,IAAmB3B,GAC5E7J,KAAMyL,GAAehJ,UAAWiJ,IAAmB5B,GACnD9J,KAAM2L,GAAoBlJ,UAAWmJ,IAAwB7B,GAE7D9J,SAAU4L,IAAsB1B,GAChClK,SAAU6L,IAAuBvB,GACjChJ,UAAWwK,IAAuBrB,GAClCnJ,UAAWyK,IAAmBpB,GAC9BrJ,UAAW0K,IAAwBnB,GAEnC7K,SAAUiM,IAAsBhB,GAChCjL,SAAUkM,IAAuBd,GACjC9J,UAAW6K,IAAuBZ,IAClCjK,UAAW8K,IAAmBX,IAC9BnK,UAAW+K,IAAwBV,GAGrCW,GAAS7L,EAAQ,GACjB8L,GAAOzE,EAAQrH,EAAQ,GACvB+L,GAAS1D,EAASrI,EAAQ,GAAKiI,EAAWC,aAC1C8D,GAAOhM,EAAQ,GAEfiM,GAAaJ,GACbK,GAAaH,GAEbI,GAAiB9J,EAAciG,EAAW1F,OAAS0F,EAAW1F,OAAS,EACvEwJ,GAAW,EACXC,GAAe,EACfC,GAAsB,EACtBC,GAAqB,EACrBC,GAAqB,EAErBC,IAAa,EACbC,GAAQ,EACRC,GAAc,EACdC,GAAe,EACfC,GAAiB,GACjBC,GAAqB,EACrBC,GAAW,EACXC,GAAe,EACfC,GAAU,EACVC,GAAU,EACVC,GAAY,EACZC,GAAgB,EAEhBC,GAAQ,EACRC,GAAW,EAEflF,EAAUhG,MAAQ,CAChBkK,oBAAqB,EACrBT,OAAQ,EACRC,KAAM,EACNM,SAAU,EACVC,aAAc,EACdkB,gBAAiB,GACjBC,eAAgB,GAChBC,eAAgB,GAChBC,oBAAqB,GACrBC,eAAgB,IAElBvF,EAAUtF,MAAQ,CAChB2J,YAAY,EACZK,mBAAoB,EACpBf,OAAQ,EACRC,KAAM,EACNe,SAAU,EACVC,aAAc,EACdC,QAAS,EACTC,QAAS,EACTC,UAAW,EACXC,cAAe,EACfQ,gBAAiB,GACjBC,eAAgB,GAChBC,eAAgB,GAChBC,oBAAqB,GACrBC,eAAgB,IAIlB,IAAIC,GAAa5I,EAAO6I,OAAO,CAACD,EAAY3I,IACnC2I,EAAWlJ,OAAOO,EAAWrB,MACnC,IAkCH,IAjCAgJ,GAAUxH,KAAK9D,OAAOsM,IACtBf,GAAUzH,KAAK1C,OAAOkL,IAElBhB,IAAW,GAAKC,IAAW,EAC7BA,GAAyB,iBAARnK,EAAmBA,EAAM,EACjCkK,IAAW,GAAKC,IAAW,EACpCD,GAAyB,iBAARtL,EAAmBA,EAAM,GAE1CsL,GAAyB,iBAARtL,EAAmBA,EAAMsL,GAC1CC,GAAyB,iBAARnK,EAAmBpB,EAAMuL,IAG5CC,GAAYF,GAAUC,GAEpBG,GADEF,IAAa,IACP,IACCA,IAAa,IACd,IACCA,IAAa,IACd,GACCA,IAAa,GACd,EACCA,IAAa,EACd,EACCA,IAAa,GACd,GACCA,IAAa,IACd,IACCA,IAAa,KACd,KAEA,KAGHE,GAAQ,GACbA,IAAS,GACTC,IAAY,GAMd,GAHAL,IAAoBK,GACpBJ,IAAoBI,GAER,SAAR3L,EAEF,IADAsL,GAAUxH,KAAK0I,KAAKlB,IACbA,GAAUI,IAAU,GACzBJ,KAGJ,GAAY,SAARlK,EAEF,IADAmK,GAAUzH,KAAK2I,MAAMlB,IACdA,GAAUG,IAAU,GACzBH,KAaJ,GARAD,IAAoBK,GACpBJ,IAAoBI,GACpBH,GAAYF,GAAUC,GACtBT,KAAaQ,GAAU,GAAKC,GAAU,GAGtCE,GAAgBD,GAAYvL,EAC5BwF,EAAQO,KAAO,GAAG8D,OACdgB,GACF,IAAK,IAAI4B,EAAI,EAAGA,GAAKzM,EAAayM,IAAK,CACrC,IAAIC,EAAMpB,GAAUE,GAAgBiB,EACpCC,EAAMA,EAAIC,QAAQjB,GAASlJ,WAAWxB,OAAS,GAC/C,IAAIN,EAAO0G,EAAcA,EAAYsF,GAAOA,EAC5CxB,GAAqBrH,KAAK9D,IAAIyF,EAAQU,YAAYxF,GAAM+E,MAAOyF,IAC/DD,GAAepO,KAAK6D,OAEjB,CACLuK,GAAepO,KAAK,GAEpB,IAAI6P,EAAM,EACV,KAAOA,EAAMrB,IACXqB,GAAOlB,GACPP,GAAepO,KAAK6P,GAItB,IADAA,EAAM,EACCA,EAAMpB,IACXoB,GAAOlB,GACPP,GAAe2B,QAAQF,GAGzBzB,GAAelO,QAAQ2D,IACrBA,EAAO0G,EAAcA,EAAY1G,GAAQA,EACzCwK,GAAqBrH,KAAK9D,IAAIyF,EAAQU,YAAYxF,GAAM+E,MAAOyF,MA4EnE,GAvEIrC,IACFoB,IAAUiB,GAAqBpC,GAE7B3B,GAAa6B,IACfiB,IAAUhB,GAIRtC,GAAae,IACflC,EAAQO,KAAO,GAAGwD,OAClBqB,GAAqBpF,EAAQU,YAAYyB,GAAelC,MACxDyE,IAAQU,GAAqBhD,EAC7B4C,GAAWN,GAAOD,GAClBQ,GAAe5G,KAAK2I,MAAMhC,GAAWD,IACrCL,GAAOD,GAASQ,GAAeF,IAI7B5D,GAAamB,IACftC,EAAQO,KAAO,GAAGyD,OAClB9C,EAAW3J,QAAQ8P,IACjBA,EAAOhG,EAAcA,EAAYgG,GAAQA,EACzClC,GAAqB9G,KAAK9D,IAAI4K,GAAoBnF,EAAQU,YAAY2G,GAAMpH,SAI5EiF,GADsB,GAApB1C,EACoBwB,GAGpB3F,KAAKiJ,IAAInC,GAAqB9G,KAAKkJ,IAAK/E,EAAmBnE,KAAKmJ,GAAM,MACtEnJ,KAAKiJ,IAAItD,GAAqB3F,KAAKoJ,IAAKjF,EAAmBnE,KAAKmJ,GAAM,MAG1E7C,IAAUO,GAAsB3C,GAE9BpB,GAAauB,GACX2C,KACFV,IAAUhC,GAKVhB,GAAasB,IACf2B,IAAQR,GAAoBjB,EAC5BwC,GAAWhB,GAASC,GACpBgB,GAAevH,KAAK2I,MAAMrB,IAAYF,GAAejK,OAAS,IAC9DoJ,GAAOD,GAASiB,IAAgBH,GAAejK,OAAS,GACxDmK,GAAWhB,GAASC,IAKtB5D,EAAUtF,MAAM8K,gBAAkBf,GAAeqB,OAAO,CAACY,EAAKL,EAAMM,KAClE,IAAIC,EAAU/C,GAcd,OAZA6C,EAAIrQ,KAAK,CACP6D,KAAMmM,EACNpL,EAAG2L,EAAUlC,GACbxJ,EAAGyI,GAAST,GAAiB,EAAI0B,GAAe+B,IAG7CtC,IAAuB,IAATgC,IACjB/B,GAAQX,GAAST,GAAiB,EAAI0B,GAAe+B,EACrDpC,GAAcD,GAAQV,GACtBY,GAAeb,GAASW,IAGnBoC,GACN,IAGC/F,GAAa6B,EAAe,CAC9B,IAAIoE,EAAU/C,GACVlD,GAAa0B,IACfuE,GAAWlC,GAAqBpC,GAGlCtC,EAAUtF,MAAM+K,eAAiBzF,EAAUtF,MAAM8K,gBAAgBM,OAAO,CAACY,EAAKL,EAAMM,KAClFD,EAAIrQ,KAAK,CACPwQ,OAAQD,EACRE,OAAQnD,GAASL,GAAqB,EAAIsB,GAAe+B,EACzDI,KAAMH,EAAUnE,EAChBuE,KAAMrD,GAASL,GAAqB,EAAIsB,GAAe+B,IAElDD,GACN,IAIL,GAAI/F,GAAakC,GAAoB,CACnC,IAAI+D,EAAU/C,GACVlD,GAAa0B,IACfuE,GAAWlC,GAAqBpC,GAE9B3B,GAAa6B,IACfoE,GAAWnE,GAGbzC,EAAUtF,MAAMiL,oBAAsB3F,EAAUtF,MAAM8K,gBAAgBM,OAAO,CAACY,EAAKL,EAAMM,KACvFD,EAAIrQ,KAAK,CACPwQ,OAAQD,EACRE,OAAQnD,GAASH,GAAsB,EAAIoB,GAAe+B,EAC1DI,KAAMrD,GACNsD,KAAMrD,GAASH,GAAsB,EAAIoB,GAAe+B,IAEnDD,GACN,IAIL,GAAI/F,GAAagC,GAAe,CAC9B,IAAIiE,EAAU/C,GACVlD,GAAa0B,IACfuE,GAAWlC,GAAqBpC,GAE9B3B,GAAa6B,IACfoE,GAAWnE,GAGbzC,EAAUtF,MAAMgL,eAAiB,CAC/BmB,OAAQD,EAAUrD,GAAiB,EACnCuD,OAAQnD,GACRoD,KAAMH,EAAUrD,GAAiB,EACjCyD,KAAMpD,GAAON,IAKjB,GAAI3C,GAAasB,EAAe,CAC9B,IAAI2E,EAAU/C,GACVlD,GAAa0B,IACfuE,GAAWlC,GAAqBpC,GAE9B3B,GAAa6B,IACfoE,GAAWnE,GAET9B,GAAagC,KACfiE,GAAWrD,GAAiB,GAG9BvD,EAAUtF,MAAMkL,eAAiB,CAC/B1L,KAAMgI,EACNjH,EAAG2L,EACH1L,EAAG0I,GAAOzB,GA0Bd,GApBAnC,EAAUhG,MAAMmL,gBAAkBjF,EAAW4F,OAAO,CAACY,EAAKL,EAAMM,KAC9D,IAAIM,EAAUnD,GAed,OAbI7J,EACFyM,EAAIrQ,KAAK,CACP6D,KAAMmM,EACNpL,EAAGwI,GAASQ,IAAgB0C,EAAQ,GAAK1C,GAAe,EACxD/I,EAAG+L,EAAU/C,KAGfwC,EAAIrQ,KAAK,CACP6D,KAAMmM,EACNpL,EAAGwI,GAASQ,GAAe0C,EAC3BzL,EAAG+L,EAAU/C,KAGVwC,GACN,IAGCvG,GAAa4B,EAAoB,CACnC,IAAIkF,EAAUnD,GACV3D,GAAamB,IACf2F,GAAW/C,GAAsB3C,GAE/BpB,GAAauB,GACX2C,KACF4C,GAAWtF,GAIf,IAAK,IAAIgF,EAAQ,EAAGO,EAAuBjN,EAAciG,EAAW1F,OAAS,EAAI0F,EAAW1F,OAAQmM,EAAQO,EAAsBP,IAChI3G,EAAUhG,MAAMsL,oBAAoBjP,KAAK,CACvCwQ,OAAQpD,GAASN,GAAsB,EAAIc,GAAe0C,EAC1DG,OAAQG,EACRF,KAAMtD,GAASN,GAAsB,EAAIc,GAAe0C,EACxDK,KAAMpD,KAMZ,GAAIzD,GAAauB,EAAe,CAC9B,IAAIuF,EAAUnD,GAEVO,IACElE,GAAamB,IACf2F,GAAW/C,GAAsB3C,GAEnC0F,GAAWtF,GAEXsF,EAAU3C,GAIZ,IAAI6C,EAAkB,EAEpBA,EADElN,EACgBM,EAAiB2F,EAAW1F,OAAS0F,EAAW1F,OAAS,EAEzD0F,EAAW1F,OAG/B,IAAK,IAAImM,EAAQ,EAAGA,EAAQQ,EAAiBR,IACvC1M,GAAeM,EACjByF,EAAUhG,MAAMoL,eAAe/O,KAAK,CAClCwQ,OAAQpD,GAASR,GAAqB,EAAIgB,GAAe0C,EAAQ1C,GAAe,EAChF6C,OAAQG,EACRF,KAAMtD,GAASR,GAAqB,EAAIgB,GAAe0C,EAAQ1C,GAAe,EAC9E+C,KAAMC,EAAUtF,IAGlB3B,EAAUhG,MAAMoL,eAAe/O,KAAK,CAClCwQ,OAAQpD,GAASR,GAAqB,EAAIgB,GAAe0C,EACzDG,OAAQG,EACRF,KAAMtD,GAASR,GAAqB,EAAIgB,GAAe0C,EACvDK,KAAMC,EAAUtF,IAOxB,GAAIxB,GAAa0B,EAAe,CAC9B,IAAIoF,EAAUnD,GACVO,IACElE,GAAamB,IACf2F,GAAW/C,GAAsB3C,GAE/BpB,GAAauB,IACfuF,GAAWtF,GAEbsF,GAAW/D,GAAiB,GAE5B+D,EAAU3C,GAGZtE,EAAUhG,MAAMqL,eAAiB,CAC/BwB,OAAQpD,GACRqD,OAAQG,EACRF,KAAMrD,GAAOJ,GACb0D,KAAMC,GAKV,GAAI9G,GAAae,EAAe,CAC9B,IAAI+F,EAAUnD,GACVO,IACElE,GAAamB,IACf2F,GAAW/C,GAAsB3C,GAE/BpB,GAAauB,IACfuF,GAAWtF,GAETxB,GAAa0B,IACfoF,GAAW/D,GAAiB,IAG9B+D,EAAU3C,GAAQpB,GAAiB,EAGrClD,EAAUhG,MAAMuL,eAAiB,CAC/BrL,KAAMiH,EACNlG,EAAGyI,GAAOtC,EACVlG,EAAG+L,GAIPjH,EAAUhG,MAAMkK,oBAAsBA,GACtClE,EAAUhG,MAAMyJ,OAASA,GACzBzD,EAAUhG,MAAM0J,KAAOA,GACvB1D,EAAUhG,MAAMgK,SAAWA,GAC3BhE,EAAUhG,MAAMiK,aAAeA,GAE/BjE,EAAUtF,MAAMgK,mBAAqBA,GACrC1E,EAAUtF,MAAM2J,WAAaA,GAC7BrE,EAAUtF,MAAM4J,MAAQA,GACxBtE,EAAUtF,MAAM6J,YAAcA,GAC9BvE,EAAUtF,MAAM8J,aAAeA,GAC/BxE,EAAUtF,MAAMiJ,OAASA,GACzB3D,EAAUtF,MAAMkJ,KAAOA,GACvB5D,EAAUtF,MAAMiK,SAAWA,GAC3B3E,EAAUtF,MAAMkK,aAAeA,GAC/B5E,EAAUtF,MAAMmK,QAAUA,GAC1B7E,EAAUtF,MAAMoK,QAAUA,GAC1B9E,EAAUtF,MAAMqK,UAAYA,GAC5B/E,EAAUtF,MAAMsK,cAAgBA,GAEI/O,KAAK+J,UC1f5B,SAASoH,IACtB,IAAIpI,QAAEA,EAAOjC,KAAEA,EAAI8C,WAAEA,EAAUG,UAAEA,GAAc/J,MAC3CgJ,MAAEA,EAAKgB,OAAEA,EAAMrI,QAAEA,EAAOyB,UAAEA,EAAS6G,WAAEA,GAAenD,GACpD5E,OAAEA,EAAMC,OAAEA,EAAMoB,YAAEA,EAAaC,SAAU4N,GAAkBC,KAAKC,MAAMD,KAAKE,UAAUnO,KACnFnC,KAAMuQ,EAAmB9P,UAAW+P,GAA2BL,GAC/DlQ,SAAUwQ,EAAuBtQ,OAAQuQ,GAAwBF,GAClE3M,EAASC,GAAW7C,EACzB6H,EAAU3G,UAAY,CACpBlB,OAAQ,GACRC,OAAQ,EACRyP,gBAAiB,GACjBC,aAAc,IAGM,iBAAX/M,IACTA,EAAUkE,EAAQ1D,EAAaR,IAEX,iBAAXC,IACTA,GAAWiF,EAASJ,EAAWC,aAAelI,EAAQ,IAAM2D,EAAaP,IAEtD,iBAAV5C,IACTA,GAAW6H,EAASJ,EAAWC,aAAelI,EAAQ,IAAM2D,EAAanD,GAAW,GAGtF4H,EAAU3G,UAAUlB,OAAS,CAAC4C,EAASC,GACvCgF,EAAU3G,UAAUjB,OAASA,EAE7B,IAAI2P,EAAiB,EAAI1K,KAAKmJ,GAAMtG,EAAW1F,OAC3CwN,EAAQ3K,KAAKmJ,GAAK,EAElBE,EAAM,GACV,IAAK,IAAIT,EAAI,EAAGA,EAAIzM,EAAayM,IAAK,CACpC,IAAIgC,GAASzO,EAAcyM,GAAKzM,EAChCkN,EAAIT,GAAK/F,EAAW4F,OAAO,CAACY,EAAKL,EAAMM,KACrC,IAAIuB,EAAW,CACbjN,EAAG7C,EAASiF,KAAKoJ,IAAIuB,EAAQD,EAAgBpB,GAASsB,EACtD/M,EAAG9C,EAASiF,KAAKkJ,IAAIyB,EAAQD,EAAgBpB,GAASsB,GAGxD,OADAvB,EAAIrQ,KAAKwE,EAAwBqN,EAAUlI,EAAU3G,UAAUlB,SACxDuO,GACN,IAGL1G,EAAU3G,UAAUwO,gBAAkBnB,EAElCe,IACFzH,EAAU3G,UAAUyO,aAAe5H,EAAW4F,OAAO,CAACY,EAAKL,EAAMM,KAC/D,IAAIwB,EAAQ,CACVlN,GAAI7C,EAASuP,EAAwB,EAAIC,GAAuBvK,KAAKoJ,IAAIuB,EAAQD,EAAgBpB,GACjGzL,GAAI9C,EAASuP,EAAwB,EAAIC,GAAuBvK,KAAKkJ,IAAIyB,EAAQD,EAAgBpB,IAE/FyB,EAAWvN,EAAwBsN,EAAOnI,EAAU3G,UAAUlB,QASlE,OAPA6G,EAAQO,KAAO,GAAGoI,MAElBjB,EAAIrQ,KAAK,CACP6D,KAAMmM,EACN8B,MAAAA,EACAC,SAAAA,IAEK1B,GACN,KC/DQ,SAAS2B,IACtB,IAAItL,KAAEA,EAAIiD,UAAEA,GAAc/J,MACtBgH,OAAEA,EAAMjD,MAAEA,GAAU+C,GAClBtE,UAAWyK,GAAmBlJ,EAAMN,SAASC,WAC7ClB,UAAWwK,GAAuBjJ,EAAMM,SAASX,WACnDsK,aAAEA,EAAYkB,gBAAEA,GAAoBnF,EAAUhG,OAC9CsK,MAAEA,EAAKC,YAAEA,EAAWC,aAAEA,EAAYb,OAAEA,EAAMC,KAAEA,EAAIe,SAAEA,EAAQE,QAAEA,EAAOC,QAAEA,EAAOC,UAAEA,GAAc/E,EAAUtF,MAEtG4N,EAAY,EACZC,EAAkB,EAClBC,EAAW,EAEfvL,EAAO1G,QAAQ,CAAC2G,EAAY4B,KAC1B,IAAIhH,YAAEA,EAAWC,YAAEA,EAAWC,SAAEA,EAAQC,OAAEA,GAAWiF,EAmBrD,MAjBkC,iBAAvBA,EAAWlF,UAChBA,EAAWF,IACboF,EAAWlF,SAAWF,GAEpBE,EAAWD,IACbmF,EAAWlF,SAAWD,GAExByQ,GAAYtL,EAAWlF,UAEvBuQ,IAIAC,GAFiB,GAAf1J,EAEU,EAAI7G,EAEJA,EAEPiF,IAKPoL,EADEE,EAAWD,EAAkBtE,GAClBA,EAAeuE,GAAYD,EAE5B,EAIdtL,EAAO1G,QAAQ2G,IACb,IAAIpF,YAAEA,EAAWE,SAAEA,GAAakF,EAEhB,QAAZlF,IACFkF,EAAWlF,SAAWsQ,EAAYxQ,EAAcA,EAAcwQ,EAC9DE,GAAYtL,EAAWlF,YAK3BgI,EAAUyI,SAAWnB,KAAKC,MAAMD,KAAKE,UAAUvK,IAAS6I,OAAO,CAAC4C,EAAaxL,EAAY4B,KACvF5B,EAAWrB,KAAKtF,QAAQ,CAACoI,EAAUC,KAC5B8J,EAAY9J,KACf8J,EAAY9J,GAAa,IAEtB8J,EAAY9J,GAAWE,KAC1B4J,EAAY9J,GAAWE,GAAewI,KAAKC,MAAMD,KAAKE,UAAUtK,OAG7DwL,GACN,IAEH1I,EAAUyI,SAASlS,QAAQ,CAACoS,EAAY/J,KACtC,IAAI3D,EAAIkK,EAAgBvG,GAAW3D,EAAIuN,EAAW,EAElDG,EAAWpS,QAAQqS,IAEjBA,EAAQ/M,KAAO+M,EAAQ/M,KAAK+C,GAGJ,QAApBgK,EAAQ5Q,WACV4Q,EAAQ5Q,SAAWsQ,GAIrB,IAAIO,EAAY,EACZ3N,EAAI,EACJ2J,GAAW,GAAKC,GAAW,GAC7B+D,EAAalE,GAAYiE,EAAQ/M,KAAOiJ,GAAYC,EACpD8D,GAAa3F,EACbhI,EAAIyI,EAAST,GACJ2B,GAAW,GAAKC,GAAW,GACpC+D,EAAalE,GAAYtH,KAAKiJ,IAAIsC,EAAQ/M,MAAQwB,KAAKiJ,IAAIzB,IAAaE,EACxE8D,GAAa5F,EACb/H,EAAI0I,EAAOX,GAEP2F,EAAQ/M,KAAO,GACjBgN,EAAatE,EAAcqE,EAAQ/M,KAAQgJ,EAC3CgE,GAAa3F,EACbhI,EAAIoJ,EAAQpB,IAEZ2F,EAAarE,EAAenH,KAAKiJ,IAAIsC,EAAQ/M,MAASwB,KAAKiJ,IAAIxB,GAC/D+D,GAAa3F,EACbhI,EAAIoJ,EAAQpB,GAGhB0F,EAAQC,UAAYA,EACpBD,EAAQ1N,EAAIA,EAGZ0N,EAAQ3N,EAAIA,EAAI2N,EAAQ3Q,OAAS2Q,EAAQ5Q,SAAW,EAEpDiD,GAAK2N,EAAQ3Q,OAAS2Q,EAAQ5Q,aAIMgI,EAAUyI,SC7GrC,SAASK,IACtB,IAAI/L,KAAEA,EAAIiD,UAAEA,GAAc/J,MACtBgH,OAAEA,EAAMjD,MAAEA,GAAU+C,GAClBtE,UAAWyK,GAAmBlJ,EAAMN,SAASC,WAC/CwL,gBAAEA,GAAoBnF,EAAUhG,OAChCsK,MAAEA,EAAKC,YAAEA,EAAWC,aAAEA,EAAYb,OAAEA,EAAMC,KAAEA,EAAIe,SAAEA,EAAQE,QAAEA,EAAOC,QAAEA,EAAOC,UAAEA,GAAc/E,EAAUtF,MAE1GsF,EAAU+I,UAAYzB,KAAKC,MAAMD,KAAKE,UAAUvK,IAAS6I,OAAO,CAACkD,EAAc9L,KAC7EA,EAAWrB,KAAOqB,EAAWrB,KAAKiK,OAAO,CAACmD,EAAStK,EAAUC,KAC3D,IAAIsK,EAAa,EACbhO,EAAI,EAuBR,OAtBI2J,GAAW,GAAKC,GAAW,GAC7BoE,EAAcvE,GAAYhG,EAAWmG,GAAYC,EACjD7J,EAAIyI,EAA2B,EAAjBT,EAAsB,EAAIgG,GAC/BrE,GAAW,GAAKC,GAAW,GACpCoE,EAAcvE,GAAYtH,KAAKiJ,IAAI3H,GAAYtB,KAAKiJ,IAAIzB,IAAaE,EACrE7J,EAAI0I,EAAyB,EAAjBV,EAAsB,EAAIgG,GAElCvK,EAAW,GACbuK,EAAc3E,EAAc5F,EAAYkG,EACxC3J,EAAIoJ,EAAQpB,EAAiBgG,IAE7BA,EAAc1E,EAAenH,KAAKiJ,IAAI3H,GAAatB,KAAKiJ,IAAIxB,GAC5D5J,EAAIoJ,EAAQpB,EAAiBgG,GAIjCD,EAAQ5S,KAAK,CACX4E,EAAGkK,EAAgBvG,GAAW3D,EAC9BC,EAAAA,EACAiO,MAAOxK,EACPsB,OAAQiJ,IAEHD,GACN,IAEHD,EAAa3S,KAAKiR,KAAKC,MAAMD,KAAKE,UAAUtK,KAErC8L,GACN,IAEsC/S,KAAK+J,UAAU+I,UCvC3C,SAASK,IACtB,IAAIrM,KAAEA,EAAI8C,WAAEA,EAAUG,UAAEA,GAAc/J,MAClCgJ,MAAEA,EAAKgB,OAAEA,EAAMhD,OAAEA,EAAMrF,QAAEA,GAAYmF,EAEzCiD,EAAUqJ,SAAW/B,KAAKC,MAAMD,KAAKE,UAAUvK,EAAO,KAEtD,IAAIpB,KAAEA,EAAI1D,OAAEA,EAAMC,OAAEA,GAAW4H,EAAUqJ,UACpCtO,EAASC,GAAW7C,GACpBmR,EAASC,GAAWnR,EACrBoR,EAAW,EAEfA,EAAW3N,EAAKiK,OAAO,CAAC2D,EAAK9K,IAC3B8K,GAA0B,OAAnB9K,EAASwK,MAAiB,EAAIxK,EAASwK,MAE7C,GAEHnJ,EAAUqJ,SAASG,SAAWA,EAER,iBAAXzO,IACTA,EAAUkE,EAAQ1D,EAAaR,IAEX,iBAAXC,IACTA,GAAWiF,EAASJ,EAAWC,aAAelI,EAAQ,IAAM2D,EAAaP,IAErD,iBAAXsO,IACTA,GAAYrJ,EAASJ,EAAWC,aAAelI,EAAQ,IAAM2D,EAAa+N,GAAY,GAElE,iBAAXC,IACTA,GAAYtJ,EAASJ,EAAWC,aAAelI,EAAQ,IAAM2D,EAAagO,GAAY,GAExFvJ,EAAUqJ,SAASlR,OAAS,CAAC4C,EAASC,GACtCgF,EAAUqJ,SAASjR,OAAS,CAACkR,EAASC,GC/BzB,SAASG,IACtB,IAAI3M,KAAEA,EAAIiD,UAAEA,GAAc/J,MACtBoD,UAAEA,EAAS6G,WAAEA,EAAUjD,OAAEA,GAAWF,GACpCxD,IAAEA,GAAQF,GACVlB,OAAEA,EAAMC,OAAEA,GAAW4H,EAAU3G,UAE/BwL,EAAU,EACd5H,EAAO1G,QAAQ2G,IACb2H,EAAUxH,KAAK9D,IAAIsL,KAAY3H,EAAWrB,QAE5CgJ,EAAiB,QAAPtL,EAAgBsL,EAAUtL,EAEpC,IAAIwO,EAAiB,EAAI1K,KAAKmJ,GAAMtG,EAAW1F,OAC3CwN,EAAQ3K,KAAKmJ,GAAK,EAEtBxG,EAAU2J,WAAarC,KAAKC,MAAMD,KAAKE,UAAUvK,IACjD+C,EAAU2J,WAAWC,IAAIC,IACvBA,EAAUC,aAAeD,EAAUhO,KAAKiK,OAAO,CAACY,EAAK/H,EAAUC,KAC7D,IAAIqJ,EAAQtJ,EAAWkG,EACnBsD,EAAQ,CACVlN,EAAG7C,EAASiF,KAAKoJ,IAAIuB,EAAQD,EAAgBnJ,GAAaqJ,EAC1D/M,EAAG9C,EAASiF,KAAKkJ,IAAIyB,EAAQD,EAAgBnJ,GAAaqJ,GAM5D,OAJAvB,EAAIrQ,KAAK,CACPwF,KAAM8C,EACNwJ,MAAAA,IAEKzB,GACN,IAEImD,IC5BX,SAAwBE,EAAelD,EAAS,EAAGC,EAAS,EAAGC,EAAO9Q,KAAK8G,KAAKkC,MAAO+H,EAAO/Q,KAAK8G,KAAKkD,QACtGhK,KAAK+I,QAAQgL,UAAY/T,KAAK8G,KAAKhG,gBACnCd,KAAK+I,QAAQiL,SAASpD,EAAQC,EAAQC,EAAMC,GCF9C,SAAwBkD,IACtB,IAAKjU,KAAK8G,KAAKzF,OAAOJ,KAAM,OAE5B,IAAI8H,QAAEA,EAAOjC,KAAEA,EAAI8C,WAAEA,GAAe5J,MAChCE,KAAEA,EAAImB,OAAEA,GAAWyF,GACjB5G,KAAMgU,EAAU1S,WAAEA,EAAUC,YAAEA,EAAWF,QAAEA,EAAOD,UAAEA,EAASI,UAAEA,GAAcL,GAC/EH,SAAEA,EAAQC,MAAEA,EAAKQ,QAAEA,GAAYD,GAC/B0H,WAAEA,EAAUF,YAAEA,EAAWW,aAAEA,GAAiBD,EAEhD,GAAkB,WAAdsK,EACF,OAAQhU,GACN,IAAK,MACHgU,EAAa,OACb,MACF,IAAK,OACHA,EAAa,OACb,MACF,IAAK,MACHA,EAAa,SACb,MACF,IAAK,QACHA,EAAa,OAKnB,IAAIC,EAAkB/M,KAAK9D,IAAI7B,EAAaP,GACxC2P,EAAS/J,EAAKkD,OAASlD,EAAKnF,QAAQ,GAAKkI,EAAevI,EACxDsP,GAAU9J,EAAKkC,MAAQE,GAAe,EAC1CE,EAAW9I,QAAQ,CAAC8T,EAAUC,KAC5BzD,GAAU9J,EAAKkC,MAAQE,GAAe,EAEtCkL,EAAS9T,QAAQgU,IACf,OAAQJ,GACN,IAAK,SACHnL,EAAQwL,YACRxL,EAAQyL,OAAO5D,EAASpP,EAAa,EAAGqP,EAASsD,EAAkB,GACnEpL,EAAQ0L,IAAI7D,EAASpP,EAAa,EAAGqP,EAASsD,EAAkB,EAAG3S,EAAa,EAAG,EAAG,EAAI4F,KAAKmJ,IAC/FxH,EAAQ2L,YAER3L,EAAQgL,UAAYO,EAAW1L,UAAUzH,MACzC4H,EAAQ4L,OACR,MACF,IAAK,OACH,IAAIC,GAAcpT,EAAaC,GAAe,EAG9CsH,EAAQwL,YACRxL,EAAQyL,OAAO5D,EAAQC,EAASsD,EAAkB,GAClDpL,EAAQ8L,OAAOjE,EAASgE,EAAa,EAAG/D,EAASsD,EAAkB,GACnEpL,EAAQ2L,YACR3L,EAAQvG,UAAY,EACpBuG,EAAQ+L,YAAcR,EAAW1L,UAAUzH,MAC3C4H,EAAQgM,SAERhM,EAAQwL,YACRxL,EAAQyL,OAAO5D,EAASpP,EAAa,EAAGqP,EAASsD,EAAkB,GACnEpL,EAAQ0L,IAAI7D,EAASpP,EAAa,EAAGqP,EAASsD,EAAkB,EAAG1S,EAAc,EAAG,EAAG,EAAI2F,KAAKmJ,IAChGxH,EAAQ2L,YACR3L,EAAQgL,UAAYO,EAAW1L,UAAUzH,MACzC4H,EAAQ4L,OAER5L,EAAQwL,YACRxL,EAAQyL,OAAO5D,EAASgE,EAAanT,EAAc,EAAGoP,EAASsD,EAAkB,GACjFpL,EAAQ8L,OAAOjE,EAASpP,EAAYqP,EAASsD,EAAkB,GAC/DpL,EAAQ2L,YACR3L,EAAQvG,UAAY,EACpBuG,EAAQ+L,YAAcR,EAAW1L,UAAUzH,MAC3C4H,EAAQgM,SAER,MACF,IAAK,OACHhM,EAAQgL,UAAYO,EAAW1L,UAAUzH,MACrCM,GAAeP,EACjB6H,EAAQiL,SAASpD,EAAQC,EAAQrP,EAAYC,GAE7CsH,EAAQiL,SAASpD,EAAQC,GAAU3P,EAAWO,GAAe,EAAGD,EAAYC,GAKlFmP,GAAUpP,EAAaG,EAEvBoH,EAAQiM,OACRjM,EAAQkM,UAAY,OACpBlM,EAAQmM,aAAe,SACvBnM,EAAQO,KAAO,GAAGpI,MAClB6H,EAAQgL,UAAY5S,EACpB4H,EAAQoM,SAASb,EAAW9K,KAAMoH,EAAQC,EAASsD,EAAkB,GACrEpL,EAAQqM,UAERxE,GAAU0D,EAAW7K,YAAclI,IAGrCsP,GAAUsD,EAAkB5S,IC/FhC,SAAwB8T,IACtB,IAAItM,QAAEA,EAAOjC,KAAEA,EAAIiD,UAAEA,GAAc/J,MAC/B+D,MAAEA,EAAKU,MAAEA,GAAUqC,GAEjB7F,KAAMiJ,EAAW1G,SAAU6G,EAAWlG,UAAWmG,EAAYjG,SAAUkG,EAAW9G,SAAU+G,EAAWhG,cAAeiG,GAAmB1G,GACzI9C,KAAMyJ,EAAWlH,SAAUoH,EAAWzG,UAAW0G,EAAYxG,SAAUyG,EAAWrH,SAAUsH,EAAWvG,cAAewG,GAAmBvG,GAEzIxD,KAAMgK,EAAevJ,UAAW0J,GAAuBf,GACvDpJ,KAAMoK,EAAgBzI,UAAW0S,EAAqB5T,UAAW8J,EAAqBpH,OAAQmH,GAAqBjB,GACnHrJ,KAAMwK,EAAe7I,UAAW2S,EAAoB7R,UAAWiI,GAAmBpB,GAClFtJ,KAAM2K,EAAelI,UAAWmI,GAAmBrB,GACnDvJ,KAAM6K,EAAoBlJ,UAAW4S,EAAqB9R,UAAWqI,GAAwBtB,GAE7FxJ,KAAM+K,EAAetK,UAAWyK,GAAuBvB,GACvD3J,KAAMmL,EAAgB1K,UAAW4K,GAAwBzB,GACzD5J,KAAMsL,EAAe7I,UAAW+I,GAAmB3B,GACnD7J,KAAMyL,EAAehJ,UAAWiJ,GAAmB5B,GACnD9J,KAAM2L,EAAoBlJ,UAAWmJ,GAAwB7B,GAE7D7J,MAAOsU,EAAgBvU,SAAU4L,GAAsB1B,GACvDjK,MAAOuU,EAAiBxU,SAAU6L,GAAuBvB,GACzDrK,MAAOwU,EAAoBnT,UAAWwK,GAAuBrB,GAC7DxK,MAAOyU,EAAgBpT,UAAWyK,GAAmBpB,GACrD1K,MAAO0U,EAAqBrT,UAAW0K,GAAwBnB,GAE/D5K,MAAO2U,EAAgB5U,SAAUiM,GAAsBhB,GACvDhL,MAAO4U,EAAiB7U,SAAUkM,IAAuBd,GACzDnL,MAAO6U,GAAoBxT,UAAW6K,IAAuBZ,GAC7DtL,MAAO8U,GAAgBzT,UAAW8K,IAAmBX,GACrDxL,MAAO+U,GAAqB1T,UAAW+K,IAAwBV,GAEjEqC,gBAAEA,GAAeC,eAAEA,GAAcC,eAAEA,GAAcC,oBAAEA,GAAmBC,eAAEA,IAAmBvF,EAAUhG,OACrGwL,gBAAEA,GAAeC,eAAEA,GAAcC,eAAEA,GAAcC,oBAAEA,GAAmBC,eAAEA,IAAmB5F,EAAUtF,MAErGiG,IACE0B,IACFrD,EAAQiM,OACRjM,EAAQO,KAAO,GAAG8D,OAClBrE,EAAQgL,UAAYgC,EACpBhN,EAAQkM,UAAY,QACpBlM,EAAQmM,aAAe,SACvB3F,GAAgBjP,QAAQ8P,IACtBrH,EAAQoM,SAAS/E,EAAKnM,KAAMmM,EAAKpL,EAAGoL,EAAKnL,KAE3C8D,EAAQqM,WAGN7I,IACFxD,EAAQvG,UAAY6K,GACpBtE,EAAQ+L,YAAckB,GAEtBxG,GAAelP,QAAQ8P,IACrBrH,EAAQwL,YACRxL,EAAQyL,OAAOpE,EAAKQ,OAAQR,EAAKS,QACjC9H,EAAQ8L,OAAOzE,EAAKU,KAAMV,EAAKW,MAC/BhI,EAAQ2L,YAER3L,EAAQgM,YAIRnI,IACF7D,EAAQvG,UAAY+K,GACpBxE,EAAQ+L,YAAcoB,GAEtBxG,GAAoBpP,QAAQ,CAAC8P,EAAMM,KACjC3H,EAAQwL,YACRxL,EAAQyL,OAAOpE,EAAKQ,OAAQR,EAAKS,QACjC9H,EAAQ8L,OAAOzE,EAAKU,KAAMV,EAAKW,MAC/BhI,EAAQ2L,YAER3L,EAAQgM,YAIRrI,IACF3D,EAAQwL,YACRxL,EAAQyL,OAAO/E,GAAemB,OAAQnB,GAAeoB,QACrD9H,EAAQ8L,OAAOpF,GAAeqB,KAAMrB,GAAesB,MACnDhI,EAAQ2L,YAER3L,EAAQvG,UAAY8K,GACpBvE,EAAQ+L,YAAcmB,GACtBlN,EAAQgM,UAGN/I,IACFjD,EAAQiM,OACRjM,EAAQO,KAAO,GAAG6D,MAClBpE,EAAQgL,UAAY+B,EACpB/M,EAAQkM,UAAY,SACpBlM,EAAQmM,aAAe,SACvBnM,EAAQoM,SAASxF,GAAe1L,KAAM0L,GAAe3K,EAAG2K,GAAe1K,GACvE8D,EAAQqM,YAIRlL,IACEmB,IACFtC,EAAQiM,OACRjM,EAAQO,KAAO,GAAGyD,MAClBhE,EAAQgL,UAAY2B,EACpB3M,EAAQmM,aAAe,MAEC,GAApB3J,EACFxC,EAAQkM,UAAY,SACX1J,EAAmB,EAC5BxC,EAAQkM,UAAY,QACX1J,EAAmB,IAC5BxC,EAAQkM,UAAY,QAGlBK,GAAuBA,EAAoB/Q,OAE7C+Q,EAAoBhV,QAAQsC,IAC1B,IAAIwN,EAAOlB,GAAgBtM,GAEH,GAApB2I,EACFxC,EAAQoM,SAAS/E,EAAKnM,KAAMmM,EAAKpL,EAAGoL,EAAKnL,IAEzC8D,EAAQiM,OACRjM,EAAQoN,UAAU/F,EAAKpL,EAAGoL,EAAKnL,GAC/B8D,EAAQ3E,QAASmH,EAAmBnE,KAAKmJ,GAAM,KAC/CxH,EAAQoM,SAAS/E,EAAKnM,KAAM,EAAG,GAC/B8E,EAAQqM,aAIZlG,GAAgB5O,QAAQ8P,IACE,GAApB7E,EACFxC,EAAQoM,SAAS/E,EAAKnM,KAAMmM,EAAKpL,EAAGoL,EAAKnL,IAEzC8D,EAAQiM,OACRjM,EAAQoN,UAAU/F,EAAKpL,EAAGoL,EAAKnL,GAC/B8D,EAAQ3E,QAASmH,EAAmBnE,KAAKmJ,GAAM,KAC/CxH,EAAQoM,SAAS/E,EAAKnM,KAAM,EAAG,GAC/B8E,EAAQqM,aAKdrM,EAAQqM,WAGNtJ,IACF/C,EAAQvG,UAAY0K,EACpBnE,EAAQ+L,YAAce,EAElBL,GAAuBA,EAAoBjR,OAE7CiR,EAAoBlV,QAAQsC,IAC1B,IAAIwN,EAAOf,GAAoBzM,GAEd,GAAbA,GAAkB8H,GAAagC,IAEnC3D,EAAQwL,YACRxL,EAAQyL,OAAOpE,EAAKQ,OAAQR,EAAKS,QACjC9H,EAAQ8L,OAAOzE,EAAKU,KAAMV,EAAKW,MAC/BhI,EAAQ2L,YAER3L,EAAQgM,YAGV1F,GAAoB/O,QAAQ,CAAC8P,EAAMM,KAEpB,GAATA,GAAchG,GAAagC,IAE/B3D,EAAQwL,YACRxL,EAAQyL,OAAOpE,EAAKQ,OAAQR,EAAKS,QACjC9H,EAAQ8L,OAAOzE,EAAKU,KAAMV,EAAKW,MAC/BhI,EAAQ2L,YAER3L,EAAQgM,aAKVtJ,IACF1C,EAAQvG,UAAYwK,EACpBjE,EAAQ+L,YAAca,EAElBJ,GAAsBA,EAAmBhR,OAE3CgR,EAAmBjV,QAAQsC,IACzB,IAAIwN,EAAOjB,GAAevM,GAE1BmG,EAAQwL,YACRxL,EAAQyL,OAAOpE,EAAKQ,OAAQR,EAAKS,QACjC9H,EAAQ8L,OAAOzE,EAAKU,KAAMV,EAAKW,MAC/BhI,EAAQ2L,YAER3L,EAAQgM,WAGV5F,GAAe7O,QAAQ8P,IACrBrH,EAAQwL,YACRxL,EAAQyL,OAAOpE,EAAKQ,OAAQR,EAAKS,QACjC9H,EAAQ8L,OAAOzE,EAAKU,KAAMV,EAAKW,MAC/BhI,EAAQ2L,YAER3L,EAAQgM,YAKVnJ,IACF7C,EAAQwL,YACRxL,EAAQyL,OAAOpF,GAAewB,OAAQxB,GAAeyB,QACrD9H,EAAQ8L,OAAOzF,GAAe0B,KAAM1B,GAAe2B,MACnDhI,EAAQ2L,YAER3L,EAAQvG,UAAYyK,EACpBlE,EAAQ+L,YAAcc,EACtB7M,EAAQgM,UAGN9J,IACFlC,EAAQiM,OACRjM,EAAQO,KAAO,GAAGwD,MAClB/D,EAAQgL,UAAY0B,EACpB1M,EAAQkM,UAAY,OACpBlM,EAAQmM,aAAe,SACvBnM,EAAQoM,SAAS7F,GAAerL,KAAMqL,GAAetK,EAAGsK,GAAerK,GACvE8D,EAAQqM,YClOC,SAASgB,IACtB,IAAIrN,QAAEA,EAAOjC,KAAEA,EAAIiD,UAAEA,GAAc/J,MAC/Bc,gBAAEA,EAAesC,UAAEA,EAAS6G,WAAEA,GAAenD,GAE/CzD,MAAOgT,EAAc9S,YACrBA,EACAC,SAAU4N,EACV3N,SAAU6S,EACV3S,UAAW4S,EACX3S,UAAW4S,GACTpT,GACEnC,KAAMuQ,EAAmB9P,UAAW+P,GAA2BL,GAC/DnQ,KAAMwV,EAAmB/S,UAAWgT,GAAuBJ,GAC3DrV,KAAM0V,EAAwBjT,UAAWkT,GAA4BL,GAErEpV,MAAO0V,EAAoB3V,SAAUwQ,GAA0BD,GAC/DtQ,MAAO2V,EAAoBtU,UAAWuU,GAAuBL,GAC7DvV,MAAO6V,EAAyBxU,UAAWyU,GAA4BL,GAEzE/S,IAAEA,EAAGC,KAAEA,GAAS0S,GACdvV,KAAMiW,EAAkB/V,MAAOgW,EAAmBpU,QAASqU,GAAwBvT,GACnF5C,KAAMoW,EAAmBlW,MAAOmW,EAAoBvU,QAASwU,GAAyBzT,GAExF5B,OAAEA,EAAMC,OAAEA,EAAMyP,gBAAEA,EAAeC,aAAEA,GAAiB9H,EAAU3G,WAC7D0B,EAASC,GAAW7C,EAEzB,GAAsB,WAAlBmU,EACFzE,EAAgBtR,QAAQ,CAACkX,EAAkBC,KACzC,IAAIC,GAAanU,EAAckU,GAAc,EAE7C1O,EAAQwL,YACRiD,EAAiBlX,QAAQ,CAACqX,EAAmBC,KACjB,GAAtBA,EACF7O,EAAQyL,OAAOmD,EAAkB3S,EAAG2S,EAAkB1S,GAEtD8D,EAAQ8L,OAAO8C,EAAkB3S,EAAG2S,EAAkB1S,KAG1D8D,EAAQ2L,YAGU,IAAdgD,GAAmBR,IACrBnO,EAAQgL,UAAYjT,EACpBiI,EAAQ4L,OACR5L,EAAQiM,OACRjM,EAAQ8O,YAAcN,EACtBxO,EAAQgL,UAAYuD,EACpBvO,EAAQ4L,OACR5L,EAAQqM,WAIQ,IAAdsC,GAAmBL,IACrBtO,EAAQgL,UAAYjT,EACpBiI,EAAQ4L,OACR5L,EAAQiM,OACRjM,EAAQ8O,YAAcT,EACtBrO,EAAQgL,UAAiC,QAArBoD,EAA8BrW,EAAkBqW,EACpEpO,EAAQ4L,OACR5L,EAAQqM,WAINuB,IACF5N,EAAQvG,UAAYyU,EACpBlO,EAAQ+L,YAAckC,EACtBjO,EAAQgM,iBAIZ,IAAK,IAAIrE,EAAQ,EAAGA,EAAQnN,EAAamN,IAAS,CAChD,IAAIsB,GAASzO,EAAcmN,GAASnN,EAChCmU,GAAanU,EAAcmN,GAAS,EAExC3H,EAAQwL,YACRxL,EAAQ0L,IAAI3P,EAASC,EAAS5C,EAAS6P,EAAO,EAAa,EAAV5K,KAAKmJ,IAGpC,IAAdmH,GAAmBR,IACrBnO,EAAQgL,UAAYjT,EACpBiI,EAAQ4L,OACR5L,EAAQiM,OACRjM,EAAQ8O,YAAcN,EACtBxO,EAAQgL,UAAYuD,EACpBvO,EAAQ4L,OACR5L,EAAQqM,WAIQ,IAAdsC,GAAmBL,IACrBtO,EAAQgL,UAAYjT,EACpBiI,EAAQ4L,OACR5L,EAAQiM,OACRjM,EAAQ8O,YAAcT,EACtBrO,EAAQgL,UAAiC,QAArBoD,EAA8BrW,EAAkBqW,EACpEpO,EAAQ4L,OACR5L,EAAQqM,WAINuB,IACF5N,EAAQvG,UAAYyU,EACpBlO,EAAQ+L,YAAckC,EACtBjO,EAAQgM,UAMV0B,GACF7E,EAAgB,GAAGtR,QAAQwX,IACzB/O,EAAQwL,YACRxL,EAAQyL,OAAO1P,EAASC,GACxBgE,EAAQ8L,OAAOiD,EAAoB9S,EAAG8S,EAAoB7S,GAC1D8D,EAAQvG,UAAYuU,EACpBhO,EAAQ+L,YAAcgC,EACtB/N,EAAQgM,WAKRvD,GACFK,EAAavR,QAAQyX,IACnB,IAAI9T,KAAEA,EAAIiO,MAAEA,EAAKC,SAAEA,GAAa4F,GAC1B/S,EAAGgT,GAAW9F,GACdlN,EAAGiT,EAAWhT,EAAGiT,GAAc/F,EAErCpJ,EAAQiM,OACJiD,GAAanT,EACfiE,EAAQkM,UAAY,SACX+C,EAAS,EAClBjP,EAAQkM,UAAY,OACX+C,EAAS,IAClBjP,EAAQkM,UAAY,SAGtBlM,EAAQmM,aAAe,SAEvBnM,EAAQO,KAAO,GAAGoI,MAClB3I,EAAQgL,UAAY8C,EACpB9N,EAAQoM,SAASlR,EAAMgU,EAAWC,GAClCnP,EAAQqM,YC7IC,SAAS+C,EAAa7P,GACnC,IAAIS,QAAEA,EAAOjC,KAAEA,EAAIiD,UAAEA,GAAc/J,MAC7BgB,MAAOoX,GAAgBtR,GACzB8H,QAAEA,EAAOC,QAAEA,GAAY9E,EAAUtF,MAErCsF,EAAUyI,SAASlS,QAAQoS,IACzBA,EAAWpS,QAAQqS,IACjB,IAAI3N,EAAEA,EAACC,EAAEA,EAACW,KAAEA,EAAI7D,SAAEA,EAAQ6Q,UAAEA,EAAShK,UAAEA,GAAc+J,GAC/CxR,MAAOkX,GAAiBzP,EAE9BG,EAAQwL,YACRxL,EAAQiM,OACRjM,EAAQgL,UAAYsE,EAChBzJ,GAAW,GAAKC,GAAW,EAC7B9F,EAAQiL,SAAShP,EAAIjD,EAAW,EAAGkD,EAAGlD,GAAW6Q,EAAYtK,GACpDsG,GAAW,GAAKC,GAAW,EACpC9F,EAAQiL,SAAShP,EAAIjD,EAAW,EAAGkD,EAAGlD,EAAU6Q,EAAYtK,GAExD1C,EAAO,EACTmD,EAAQiL,SAAShP,EAAIjD,EAAW,EAAGkD,EAAGlD,GAAW6Q,EAAYtK,GAE7DS,EAAQiL,SAAShP,EAAIjD,EAAW,EAAGkD,EAAGlD,EAAU6Q,EAAYtK,GAIhES,EAAQqM,UACRrM,EAAQ2L,gBAIG,GAAXpM,GACFyB,EAAUyI,SAASlS,QAAQoS,IACzBA,EAAWpS,QAAQqS,IACjB,IAAI3N,EAAEA,EAACC,EAAEA,EAAC2N,UAAEA,EAAShN,KAAEA,EAAI5E,MAAEA,EAAK4H,UAAEA,GAAc+J,GAC5C1R,KAAMqX,EAAWpX,SAAUqX,EAAepX,MAAOqX,EAAYpX,OAAQqX,GAAgBzX,GACrFG,MAAOkX,GAAiBzP,EAG9B0P,EAAYF,GAA0C,kBAApBA,EAAYnX,KAAoBmX,EAAYnX,KAAOqX,EACrFC,EAAgBH,GAAeA,EAAYlX,SAAWkX,EAAYlX,SAAWqX,EAC7EC,EAAaJ,GAAeA,EAAYjX,MAAQiX,EAAYjX,MAAQqX,EACpEC,EAAcL,GAAeA,EAAYhX,OAASgX,EAAYhX,OAASqX,EAElEH,IAELvP,EAAQiM,OACRjM,EAAQO,KAAO,GAAGiP,MAClBxP,EAAQgL,UAA0B,QAAdyE,EAAuBH,EAAeG,EAC1DzP,EAAQkM,UAAY,SAChBrG,GAAW,GAAKC,GAAW,GAC7B9F,EAAQmM,aAAe,SACvBnM,EAAQoM,SAASvP,EAAMZ,EAAGC,EAAI2N,EAAY6F,IACjC7J,GAAW,GAAKC,GAAW,GACpC9F,EAAQmM,aAAe,MACvBnM,EAAQoM,SAASvP,EAAMZ,EAAGC,EAAI2N,EAAY6F,IAEtC7S,EAAO,GACTmD,EAAQmM,aAAe,SACvBnM,EAAQoM,SAASvP,EAAMZ,EAAGC,EAAI2N,EAAY6F,KAE1C1P,EAAQmM,aAAe,MACvBnM,EAAQoM,SAASvP,EAAMZ,EAAGC,EAAI2N,EAAY6F,IAG9C1P,EAAQqM,eChED,SAASsD,EAAcpQ,GACpC,IAAIS,QAAEA,EAAOjC,KAAEA,EAAIiD,UAAEA,GAAc/J,MAC7BgB,MAAOoX,GAAgBtR,GACvBtE,UAAWyK,GAAmBnG,EAAK/C,MAAMN,SAASC,WACpD2K,MAAEA,EAAKX,OAAEA,EAAMC,KAAEA,EAAIiB,QAAEA,EAAOC,QAAEA,GAAY9E,EAAUtF,MAE1DsF,EAAU+I,UAAUxS,QAAQqY,IAC1B,IAAI/S,KAAEA,EAAMhD,UAAWgW,EAAahQ,UAAEA,EAASjG,KAAEA,EAAIK,OAAEA,EAAME,KAAEA,EAAIlC,MAAEA,EAAK6B,OAAEA,GAAW8V,GACjFxX,MAAO0X,GAAkBjQ,GACzB3H,KAAM6X,EAAQtW,UAAEA,EAAWrB,MAAO4X,EAAWhW,QAASiW,GAAgBrW,GACtE1B,KAAMgY,EAAY/Y,KAAMgZ,EAAYjW,KAAMkW,EAAYhY,MAAOiY,GAAgBpW,GAC7E/B,KAAMoY,EAAUlY,MAAOmY,EAAWvW,QAASwW,GAAgBrW,GAC3DjC,KAAMqX,EAAWpX,SAAUqX,EAAepX,MAAOqX,EAAYpX,OAAQqX,GAAgBzX,EAiI3F,GA9HAsX,EAAYF,GAA0C,kBAApBA,EAAYnX,KAAoBmX,EAAYnX,KAAOqX,EACrFC,EAAgBH,GAAeA,EAAYlX,SAAWkX,EAAYlX,SAAWqX,EAC7EC,EAAaJ,GAAeA,EAAYjX,MAAQiX,EAAYjX,MAAQqX,EACpEC,EAAcL,GAAeA,EAAYhX,OAASgX,EAAYhX,OAASqX,EAEnE5V,GAEF+C,EAAOyL,KAAKC,MAAMD,KAAKE,UAAU3L,IAAO+N,IAAIjL,IAC1C,IAAIzD,EAAEA,EAAC+E,OAAEA,EAAMkJ,MAAEA,GAAUxK,EAY3B,OAVEA,EAASzD,EADP2J,GAAW,GAAKC,GAAW,EAChB5J,EAAI+E,EAASA,EAAS1B,EAC1BsG,GAAW,GAAKC,GAAW,EACvB5J,EAAI+E,EAASA,EAAS1B,EAE/B4K,EAAQ,EACGjO,EAAI+E,EAASA,EAAS1B,EAEtBrD,EAAI+E,EAASA,EAAS1B,EAGhCI,IAITK,EAAQwL,YACR3O,EAAKtF,QAAQ,CAACoI,EAAUC,EAAW6Q,KACjC,SAASC,EAAiBD,EAAQxJ,GAChC,SAAIwJ,EAAOxJ,EAAI,KAAMwJ,EAAOxJ,EAAI,MACvBwJ,EAAOxJ,GAAG/K,GAAKmC,KAAK9D,IAAIkW,EAAOxJ,EAAI,GAAG/K,EAAGuU,EAAOxJ,EAAI,GAAG/K,IAAMuU,EAAOxJ,GAAG/K,GAAKmC,KAAK1C,IAAI8U,EAAOxJ,EAAI,GAAG/K,EAAGuU,EAAOxJ,EAAI,GAAG/K,IAM/H,MAAMyU,EAAI,GACJC,EAAI,GACV,IAAIC,EAAM,KACNC,EAAM,KACNC,EAAM,KACNC,EAAM,MACN/U,EAAEA,EAACC,EAAEA,GAAMyD,EAEf,GAAiB,GAAbC,EACFI,EAAQyL,OAAOxP,EAAGC,OACb,CACL,IAAI+K,EAAIrH,EAAY,EASpB,GARIqH,EAAI,GACN4J,EAAMJ,EAAO,GAAGxU,GAAKwU,EAAO,GAAGxU,EAAIwU,EAAO,GAAGxU,GAAK0U,EAClDG,EAAML,EAAO,GAAGvU,GAAKuU,EAAO,GAAGvU,EAAIuU,EAAO,GAAGvU,GAAKyU,IAElDE,EAAMJ,EAAOxJ,GAAGhL,GAAKwU,EAAOxJ,EAAI,GAAGhL,EAAIwU,EAAOxJ,EAAI,GAAGhL,GAAK0U,EAC1DG,EAAML,EAAOxJ,GAAG/K,GAAKuU,EAAOxJ,EAAI,GAAG/K,EAAIuU,EAAOxJ,EAAI,GAAG/K,GAAKyU,GAGxD1J,EAAIwJ,EAAOjV,OAAS,EAAG,CACzB,IAAIyV,EAAOR,EAAOjV,OAAS,EAC3BuV,EAAMN,EAAOQ,GAAMhV,GAAKwU,EAAOQ,GAAMhV,EAAIwU,EAAOQ,EAAO,GAAGhV,GAAK2U,EAC/DI,EAAMP,EAAOQ,GAAM/U,GAAKuU,EAAOQ,GAAM/U,EAAIuU,EAAOQ,EAAO,GAAG/U,GAAK0U,OAE/DG,EAAMN,EAAOxJ,EAAI,GAAGhL,GAAKwU,EAAOxJ,EAAI,GAAGhL,EAAIwU,EAAOxJ,GAAGhL,GAAK2U,EAC1DI,EAAMP,EAAOxJ,EAAI,GAAG/K,GAAKuU,EAAOxJ,EAAI,GAAG/K,EAAIuU,EAAOxJ,GAAG/K,GAAK0U,EAGxDF,EAAiBD,EAAQxJ,EAAI,KAC/B+J,EAAMP,EAAOxJ,EAAI,GAAG/K,GAElBwU,EAAiBD,EAAQxJ,KAC3B6J,EAAML,EAAOxJ,GAAG/K,GAGlB8D,EAAQkR,cAAcL,EAAKC,EAAKC,EAAKC,EAAK/U,EAAGC,QAIjD8D,EAAQwL,YACR3O,EAAKtF,QAAQ,CAACoI,EAAUC,KACtB,IAAI3D,EAAEA,EAACC,EAAEA,EAAC+E,OAAEA,EAAMkJ,MAAEA,GAAUxK,EAE5BzD,EADE2J,GAAW,GAAKC,GAAW,EACzB5J,EAAI+E,EAASA,EAAS1B,EACjBsG,GAAW,GAAKC,GAAW,EAChC5J,EAAI+E,EAASA,EAAS1B,EAEtB4K,EAAQ,EACNjO,EAAI+E,EAASA,EAAS1B,EAEtBrD,EAAI+E,EAASA,EAAS1B,EAIb,GAAbK,EACFI,EAAQyL,OAAOxP,EAAGC,GAElB8D,EAAQ8L,OAAO7P,EAAGC,MAKpB6T,IACF/P,EAAQiM,OACRjM,EAAQmR,SAAW,QACnBnR,EAAQ8O,YAAcmB,EACtBjQ,EAAQvG,UAAYA,EACpBuG,EAAQ+L,YAA2B,QAAbiE,EAAsBF,EAAgBE,EAC5DhQ,EAAQgM,SACRhM,EAAQqM,WAGNiE,IACEzK,GAAW,GAAKC,GAAW,GAC7B9F,EAAQ8L,OAAOjP,EAAKA,EAAKrB,OAAS,GAAGS,EAAG0I,EAAST,GACjDlE,EAAQ8L,OAAOjP,EAAK,GAAGZ,EAAG0I,EAAST,IAC1B2B,GAAW,GAAKC,GAAW,GACpC9F,EAAQ8L,OAAOjP,EAAKA,EAAKrB,OAAS,GAAGS,EAAG2I,GACxC5E,EAAQ8L,OAAOjP,EAAK,GAAGZ,EAAG2I,KAE1B5E,EAAQ8L,OAAOjP,EAAKA,EAAKrB,OAAS,GAAGS,EAAGqJ,GACxCtF,EAAQ8L,OAAOjP,EAAK,GAAGZ,EAAGqJ,IAE5BtF,EAAQ2L,YACR3L,EAAQiM,OACRjM,EAAQ8O,YAAc0B,EACtBxQ,EAAQgL,UAAyB,QAAbuF,EAAsBT,EAAgBS,EAC1DvQ,EAAQ4L,OACR5L,EAAQqM,WAGK,GAAX9M,EAAc,CAChB,GAAI2Q,EACF,GAAIL,GAAiBA,EAAcrU,OAEjCqU,EAActY,QAAQsC,IACpB,IAAI8F,EAAW9C,EAAKhD,IAChBoC,EAAEA,EAACC,EAAEA,GAAMyD,EAEf,OAAQwQ,GACN,IAAK,SACHnQ,EAAQiM,OACRjM,EAAQwL,YACRxL,EAAQ0L,IAAIzP,EAAGC,EAAGkU,EAAa,EAAG,EAAG,EAAI/R,KAAKmJ,IAC9CxH,EAAQgL,UAA2B,QAAfqF,EAAwBP,EAAgBO,EAC5DrQ,EAAQ4L,OAER5L,EAAQwL,YACRxL,EAAQ0L,IAAIzP,EAAGC,EAAGkU,EAAa,EAAG,EAAG,EAAI/R,KAAKmJ,IAC9CxH,EAAQgL,UAAY,OACpBhL,EAAQ4L,OACR5L,EAAQqM,kBAKd,OAAQ8D,GACN,IAAK,SACHnQ,EAAQiM,OACRpP,EAAKtF,QAAQoI,IACX,IAAI1D,EAAEA,EAACC,EAAEA,GAAMyD,EACfK,EAAQwL,YACRxL,EAAQ0L,IAAIzP,EAAGC,EAAGkU,EAAa,EAAG,EAAG,EAAI/R,KAAKmJ,IAC9CxH,EAAQgL,UAA2B,QAAfqF,EAAwBP,EAAgBO,EAC5DrQ,EAAQ4L,OAER5L,EAAQwL,YACRxL,EAAQ0L,IAAIzP,EAAGC,EAAGkU,EAAa,EAAG,EAAG,EAAI/R,KAAKmJ,IAC9CxH,EAAQgL,UAAY,OACpBhL,EAAQ4L,SAEV5L,EAAQqM,UAMZkD,IACFvP,EAAQiM,OACRjM,EAAQO,KAAO,GAAGiP,MAClBxP,EAAQgL,UAA0B,QAAdyE,EAAuBK,EAAgBL,EAC3DzP,EAAQkM,UAAY,SAEhB2D,GAAiBA,EAAcrU,OAEjCqU,EAActY,QAAQsC,IACpB,IAAI8F,EAAW9C,EAAKhD,IAChBoC,EAAEA,EAACC,EAAEA,EAACiO,MAAEA,GAAUxK,EAElBkG,GAAW,GAAKC,GAAW,GAC7B9F,EAAQmM,aAAe,SACvBnM,EAAQoM,SAASjC,EAAOlO,EAAGC,EAAIwT,IACtB7J,GAAW,GAAKC,GAAW,GACpC9F,EAAQmM,aAAe,MACvBnM,EAAQoM,SAASjC,EAAOlO,EAAGC,EAAIwT,IAE3BvF,GACFnK,EAAQmM,aAAe,SACvBnM,EAAQoM,SAASjC,EAAOlO,EAAGC,EAAIwT,KAE/B1P,EAAQmM,aAAe,MACvBnM,EAAQoM,SAASjC,EAAOlO,EAAGC,EAAIwT,MAKrC7S,EAAKtF,QAAQoI,IACX,IAAI1D,EAAEA,EAACC,EAAEA,EAACiO,MAAEA,GAAUxK,EAElBkG,GAAW,GAAKC,GAAW,GAC7B9F,EAAQmM,aAAe,SACvBnM,EAAQoM,SAASjC,EAAOlO,EAAGC,EAAIwT,IACtB7J,GAAW,GAAKC,GAAW,GACpC9F,EAAQmM,aAAe,MACvBnM,EAAQoM,SAASjC,EAAOlO,EAAGC,EAAIwT,IAE3BvF,GACFnK,EAAQmM,aAAe,SACvBnM,EAAQoM,SAASjC,EAAOlO,EAAGC,EAAIwT,KAE/B1P,EAAQmM,aAAe,MACvBnM,EAAQoM,SAASjC,EAAOlO,EAAGC,EAAIwT,MAMvC1P,EAAQqM,cC3OD,SAAS+C,EAAa7P,GACnC,IAAIS,QAAEA,EAAOjC,KAAEA,EAAIiD,UAAEA,GAAc/J,MAC/Bc,gBAAEA,EAAiBE,MAAOoX,GAAgBtR,GAC1ClB,KAAEA,EAAI1D,OAAEA,EAAMC,OAAEA,EAAMgI,OAAEA,EAAM/H,YAAEA,EAAWC,iBAAEA,EAAgBkR,SAAEA,GAAaxJ,EAAUqJ,UACrFtO,EAASC,GAAW7C,GACpBiY,EAAWC,GAAajY,EACzBkY,EAAU,EAiCd,GA/BAzU,EAAKtF,QAAQoI,IACXA,EAAS4R,aAAgB5R,EAASwK,MAAQK,EAAYjL,EACtDI,EAAS2R,QAAUA,EACC,IAAhBjY,IACFsG,EAAS2R,SAAYjY,EAAcgF,KAAKmJ,GAAM,KAGhDxH,EAAQwL,YAERxL,EAAQyL,OAAO1P,EAASC,GACxBgE,EAAQ0L,IAAI3P,EAASC,EAASqV,EAAW1R,EAAS2R,QAAS3R,EAAS2R,QAAU,EAAI3R,EAAS4R,aAAelT,KAAKmJ,IAC/GxH,EAAQvG,UAAY,EACpBuG,EAAQ+L,YAAchU,EACtBiI,EAAQgL,UAAYrL,EAASE,UAAUzH,MACvC4H,EAAQ4L,OACHtS,GACH0G,EAAQgM,SAGNoF,EAAY,IACdpR,EAAQwL,YACRxL,EAAQyL,OAAO1P,EAASC,GACxBgE,EAAQ0L,IAAI3P,EAASC,EAASoV,EAAWzR,EAAS2R,QAAS3R,EAAS2R,QAAU,EAAI3R,EAAS4R,aAAelT,KAAKmJ,IAC/GxH,EAAQgL,UAAYjT,EACpBiI,EAAQ4L,QAGV0F,GAAW,EAAI3R,EAAS4R,aAAelT,KAAKmJ,KAI/B,GAAXjI,EAAc,CAChB,IAAMtH,MAAOuZ,EAAWjY,UAAEA,GAAcyH,EAAUqJ,UAC5CnS,KAAMqX,EAAWpX,SAAUqX,EAAepX,MAAOqX,EAAYpX,OAAQqX,GAAgB8B,GACvF9X,QAAEA,EAAOC,QAAEA,EAAOF,UAAEA,EAASD,cAAEA,GAAkBD,EACjDkY,EAAaJ,EAAY3X,EACzBgY,EAAa,KAQjB,GALAnC,EAAYF,GAA0C,kBAApBA,EAAYnX,KAAoBmX,EAAYnX,KAAOqX,EACrFC,EAAgBH,GAAeA,EAAYlX,SAAWkX,EAAYlX,SAAWqX,EAC7EC,EAAaJ,GAAeA,EAAYjX,MAAQiX,EAAYjX,MAAQqX,EACpEC,EAAcL,GAAeA,EAAYhX,OAASgX,EAAYhX,OAASqX,GAElEH,EAAW,OAEhB1S,EAAKtF,QAAQ,CAACoI,EAAUC,KACtB,IAAI8L,EAAM,EAAIrN,KAAKmJ,IAAM7H,EAAS2R,QAAW,EAAIjT,KAAKmJ,GAAK7H,EAAS4R,aAAgB,GAChFrW,EAAOkG,EAASA,EAAOzB,EAASwK,MAAO1J,MAAQ,IAA6B,KAAxBd,EAAS4R,cAAoBpK,QAAQ,MAGzFwK,EAAqB,CACvB1V,EAAGoC,KAAKoJ,IAAIiE,GAAO2F,EACnBnV,EAAGmC,KAAKkJ,IAAImE,GAAO2F,GAGjBO,EAAqB,CACvB3V,EAAGoC,KAAKoJ,IAAIiE,GAAO+F,EACnBvV,EAAGmC,KAAKkJ,IAAImE,GAAO+F,GAGjBI,EAAmB,CACrB5V,EAAG2V,EAAmB3V,GAAK,EAAI2V,EAAmB3V,EAAItC,EAAUiY,EAAmB3V,EAAItC,EACvFuC,EAAG0V,EAAmB1V,GAGxB2V,ElBvCN,SAA+BzV,EAAOC,EAAQC,GAC5C,GAAID,EACF,KAAOF,EAAYC,EAAOC,EAAQC,IAC5BF,EAAMH,EAAI,EACZG,EAAMF,IACGE,EAAMH,EAAI,GACnBG,EAAMF,IAIZ,OAAOE,EkB6BgB0V,CAAeD,EAAkBH,EAAyD,EAA7CrT,KAAK9D,IAAIf,EAAegW,EAAgB,IACxGkC,EAAaG,EAEb,IAAIE,EAAuBlW,EAAwB8V,EAAoBxY,GACnE6Y,EAAuBnW,EAAwB+V,EAAoBzY,GACnE8Y,EAAqBpW,EAAwBgW,EAAkB1Y,GAGnE6G,EAAQO,KAAO,GAAGiP,MAClB,IAAI0C,EAAYlS,EAAQU,YAAYxF,GAAM+E,MACtCkS,EAAoBrV,OAAOc,OAAO,GAAIqU,GACtCJ,EAAiB5V,EAAI,EACvBkW,EAAkBlW,GAAKzC,EAAgBkW,EAEvCyC,EAAkBlW,GAAKiW,EAAY1Y,EAAgBkW,EAGrD1P,EAAQwL,YACRxL,EAAQyL,OAAOsG,EAAqB9V,EAAG8V,EAAqB7V,GAC5D8D,EAAQoS,iBAAiBJ,EAAqB/V,EAAG+V,EAAqB9V,EAAG+V,EAAmBhW,EAAGgW,EAAmB/V,GAClH8D,EAAQvG,UAAYA,EACpBuG,EAAQ+L,YAAcpM,EAASE,UAAUzH,MACzC4H,EAAQgM,SACRhM,EAAQ2L,YAER3L,EAAQwL,YACRxL,EAAQyL,OAAOwG,EAAmBhW,EAAGgW,EAAmB/V,GACxD8D,EAAQ0L,IAAIuG,EAAmBhW,EAAGgW,EAAmB/V,EAAG1C,EAAe,EAAG,EAAI6E,KAAKmJ,IACnFxH,EAAQ2L,YACR3L,EAAQgL,UAAYrL,EAASE,UAAUzH,MACvC4H,EAAQ4L,OAER5L,EAAQO,KAAO,GAAGiP,MAClBxP,EAAQmM,aAAe,SACvBnM,EAAQgL,UAA0B,QAAdyE,EAAuB9P,EAASE,UAAUzH,MAAQqX,EACtEzP,EAAQoM,SAASlR,EAAMiX,EAAkBlW,EAAGkW,EAAkBjW,MC7GrD,SAASmW,EAAe9S,GACrC,IAAIS,QAAEA,EAAOgB,UAAEA,GAAc/J,MACzBkC,OAAEA,GAAW6H,EAAU3G,UAE3B2G,EAAU2J,WAAWpT,QAAQsT,IAE3B,IAAIC,aAAEA,EAAYjL,UAAEA,EAAS1F,KAAEA,EAAIP,KAAEA,EAAIK,OAAEA,GAAW4Q,GAChD3S,KAAMoY,EAAUlY,MAAOmY,EAAWvW,QAASsY,GAAgBnY,GAC3DjC,KAAM6X,EAAQwC,UAAEA,EAAWna,MAAO4X,EAAWhW,QAASiW,GAAgBrW,GACtE1B,KAAMgY,EAAY/Y,KAAMgZ,EAAYjW,KAAMkW,EAAYhY,MAAOiY,GAAgBpW,EAsCnF,GApCA+F,EAAQwL,YACRV,EAAavT,QAAQ,CAACoI,EAAUC,KAC9B,IAAIuJ,EAAQb,KAAKC,MAAMD,KAAKE,UAAU7I,EAASwJ,QAC/CA,EAAMlN,EAAIkN,EAAMlN,EAAIsD,EACpB4J,EAAMjN,EAAIiN,EAAMjN,EAAIqD,EAEpB,IAAI6J,EAAWvN,EAAwBsN,EAAOhQ,IACxC8C,EAAGiT,EAAWhT,EAAGiT,GAAc/F,EACrCzJ,EAASyJ,SAAWA,EAEH,GAAbxJ,EACFI,EAAQyL,OAAOyD,EAAWC,GAE1BnP,EAAQ8L,OAAOoD,EAAWC,KAG9BnP,EAAQ2L,YAEJ2E,IACFtQ,EAAQiM,OACRjM,EAAQ8O,YAAcwD,EACtBtS,EAAQgL,UAAyB,QAAbuF,EAAsB1Q,EAAUzH,MAAQmY,EAC5DvQ,EAAQ4L,OACR5L,EAAQgM,SACRhM,EAAQqM,WAGN0D,IACF/P,EAAQiM,OACRjM,EAAQuS,UAAYA,EACpBvS,EAAQ8O,YAAcmB,EACtBjQ,EAAQ+L,YAA2B,QAAbiE,EAAsBnQ,EAAUzH,MAAQ4X,EAC9DhQ,EAAQgM,SACRhM,EAAQqM,WAGK,GAAX9M,GACE2Q,EACF,OAAQC,GACN,IAAK,SACHnQ,EAAQiM,OACRnB,EAAavT,QAAQoI,IACnB,IAAM1D,EAAGiT,EAAWhT,EAAGiT,GAAcxP,EAASyJ,SAC9CpJ,EAAQwL,YACRxL,EAAQ0L,IAAIwD,EAAWC,EAAWiB,EAAa,EAAG,EAAa,EAAV/R,KAAKmJ,IAC1DxH,EAAQgL,UAA2B,QAAfqF,EAAwBxQ,EAAUzH,MAAQiY,EAC9DrQ,EAAQ4L,OAER5L,EAAQwL,YACRxL,EAAQ0L,IAAIwD,EAAWC,EAAWiB,EAAa,EAAG,EAAa,EAAV/R,KAAKmJ,IAC1DxH,EAAQgL,UAAY,OACpBhL,EAAQ4L,SAEV5L,EAAQqM,aC5CL,SAASmG,IACtB,IAAIrb,KAAEA,EAAIS,UAAEA,EAASC,kBAAEA,EAAiBC,gBAAEA,GAAoBb,KAAK8G,KAC/D0U,EAAc,aAOlB,OALAxb,KAAKyb,mBAAqBzb,KAAKyb,kBAAkBC,OAEjDlT,EAAexC,KAAKhG,MACpB8I,EAAc9C,KAAKhG,MAEXE,GACN,IAAK,MACHyb,EAAY3V,KAAKhG,MACjBoS,EAAgBpM,KAAKhG,MAErBwb,EAAclT,IACZwL,EAAe9N,KAAKhG,MACpB4b,EAAS5V,KAAKhG,MACd6b,EAAa7V,KAAKhG,KAAMsI,GAET,GAAXA,GACF2L,EAAWjO,KAAKhG,OAGpB,MACF,IAAK,OACH2b,EAAY3V,KAAKhG,MACjB6S,EAAiB7M,KAAKhG,MAEtBwb,EAAclT,IACZwL,EAAe9N,KAAKhG,MACpB4b,EAAS5V,KAAKhG,MACd0Y,EAAc1S,KAAKhG,KAAMsI,GAEV,GAAXA,GACF2L,EAAWjO,KAAKhG,OAGpB,MACF,IAAK,MACHmT,EAAgBnN,KAAKhG,MAErBwb,EAAclT,IACZwL,EAAe9N,KAAKhG,MACpBmY,EAAanS,KAAKhG,KAAMsI,GAET,GAAXA,GACF2L,EAAWjO,KAAKhG,OAGpB,MACF,IAAK,QACHmR,EAAiBnL,KAAKhG,MACtByT,EAAkBzN,KAAKhG,MAEvBwb,EAAclT,IACZwL,EAAe9N,KAAKhG,MACpBoW,EAAcpQ,KAAKhG,MACnBob,EAAepV,KAAKhG,KAAMsI,GAEX,GAAXA,GACF2L,EAAWjO,KAAKhG,OAMxBA,KAAKyb,kBAAoB,IAAIhU,EAAU,CACrCvH,KAAAA,EACAS,UAAAA,EACAC,kBAAAA,EACAC,gBAAAA,EACA8G,UAAW6T,EACX5T,kBAAmB,KACjB5H,KAAK8b,MAAMC,QAAQ,oCC1FzB,MACEhc,YAAY+G,EAAO,IACjB9G,KAAK6G,OAAShB,OAAOc,OAAO,GAAIqV,GAChChc,KAAK8G,KAAOjB,OAAOc,OAAO,GAAIG,GAC9B9G,KAAK+I,QAAU/I,KAAK8G,KAAKmV,QAAQC,WAAW,MAC5Clc,KAAK+J,UAAY,GAGjB/J,KAAK8b,MAAQ,IAAIhc,EACjBE,KAAK8b,MAAMK,iBAAiB,iBAAkBrV,EAAKsV,kBAGnDxV,EAAWZ,KAAKhG,MAGhBub,EAAWvV,KAAKhG,MAGlBD,WAAW6F,EAAO,IAChB,IAAIkB,KAAEA,EAAID,OAAEA,GAAW7G,KAEvB6F,OAAOS,KAAKV,GAAMtF,QAAQ+b,IACT,UAAXA,GACFvV,EAAKE,OAASqK,KAAKC,MAAMD,KAAKE,UAAU3L,EAAKoB,SAC7CD,EAAUf,KAAKhG,OAEfkG,EAAcmW,EAASzW,EAAMkB,GAAM,KAIvCyU,EAAWvV,KAAKhG"}