"use strict";var _module=_interopRequireDefault(require("module")),_NodeTemplatePlugin=_interopRequireDefault(require("webpack/lib/node/NodeTemplatePlugin")),_NodeTargetPlugin=_interopRequireDefault(require("webpack/lib/node/NodeTargetPlugin")),_LibraryTemplatePlugin=_interopRequireDefault(require("webpack/lib/LibraryTemplatePlugin")),_SingleEntryPlugin=_interopRequireDefault(require("webpack/lib/SingleEntryPlugin")),_LimitChunkCountPlugin=_interopRequireDefault(require("webpack/lib/optimize/LimitChunkCountPlugin")),_compilationConfig=require("@hap-toolkit/shared-utils/compilation-config");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const pluginName="extract-css",MODULE_TYPE="css/extract",exec=(e,t,i)=>{const n=new _module.default(i,e);return n.paths=_module.default._nodeModulePaths(e.context),n.filename=i,n._compile(t,i),n.exports};module.exports.pitch=function(e){const t=this.loaders.slice(this.loaderIndex+1),i={filename:"*"},n=this._compilation.createChildCompiler("extract-css",i);let r;new _NodeTemplatePlugin.default(i).apply(n),new _LibraryTemplatePlugin.default(null,"commonjs2").apply(n),(new _NodeTargetPlugin.default).apply(n),new _SingleEntryPlugin.default(this.context,`!!${e}`,pluginName).apply(n),new _LimitChunkCountPlugin.default({maxChunks:1}).apply(n),n.hooks.thisCompilation.tap("extract-css loader",i=>{i.hooks.normalModuleLoader.tap("extract-css loader",(i,n)=>{i.emitFile=this.emitFile,i[MODULE_TYPE]=!1,n.request===e&&(n.loaders=t.map(e=>({loader:e.path,options:e.options,ident:e.ident})))})}),n.hooks.afterCompile.tap(pluginName,e=>{r=e.assets["*"]&&e.assets["*"].source(),e.chunks.forEach(t=>{t.files.forEach(t=>{delete e.assets[t]})})});const l=this.async();n.runAsChild((t,i,n)=>{if(t)return l(t);if(n.errors.length>0)return l(n.errors[0]);if(n.fileDependencies.forEach(e=>{this.addDependency(e)},this),n.contextDependencies.forEach(e=>{this.addContextDependency(e)},this),!r)return l(new Error("Didn't get a result from child compiler"));let o={};const a=exec(this,r,e);try{o={content:JSON.stringify(a),identifier:e},this[MODULE_TYPE](o)}catch(e){return l(e)}let u=a;_compilationConfig.options.removeUxStyle&&(u={"@info":a["@info"]});let s=`\n      module.exports = ${JSON.stringify(u)};\n      // extracted by extract-css\n    `;return l(null,s)})};
//# sourceMappingURL=extract-css-loader.js.map
