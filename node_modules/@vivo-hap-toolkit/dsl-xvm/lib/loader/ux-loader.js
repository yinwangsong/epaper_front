"use strict";var _path=_interopRequireDefault(require("path")),_loaderUtils=_interopRequireDefault(require("loader-utils")),_compilationConfig=require("@vivo-hap-toolkit/shared-utils/compilation-config"),_compiler=require("@vivo-hap-toolkit/compiler"),_validator=_interopRequireDefault(require("@vivo-hap-toolkit/compiler/lib/template/validator")),_uxFragmentUtils=require("./ux-fragment-utils"),_utils=require("./common/utils");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const pkgInfo=require("../../package.json");function parseImportList(e,t){return Promise.all(t.map(t=>resolveImportItemSrc(e,t)))}function resolveImportItemSrc(e,t){return t.attrs.src?new Promise(p=>{e.resolve(e.context,t.attrs.src,function(e,r){return e?(t.isValid=!1,t.err=e,p(t)):(t.isValid=!0,t.srcPath=r,p(t))})}):(t.isValid=!1,Promise.resolve(t))}function assemble(e,t,p,r){let a="";if(r===_utils.ENTRY_TYPE.APP)a+=(0,_uxFragmentUtils.processStyleFrag)(e,t.style,r),a+=(0,_uxFragmentUtils.processScriptFrag)(e,t.script,r),a+=`\n$app_define$('@app-application/${p}', [], function($app_require$, $app_exports$, $app_module$){\n`,t.script.length>0&&(a+="     $app_script$($app_module$, $app_exports$, $app_require$)\n",a+="     if ($app_exports$.__esModule && $app_exports$.default) {\n            $app_module$.exports = $app_exports$.default;\n        }\n",a+="     $app_module$.exports['manifest'] = manifestJson;\n",a+="     $app_module$.exports.style = { list: [ $app_style$ ] };\n"),a+="})\n",a+=`\n$app_bootstrap$('@app-application/${p}',{ packagerVersion: '${pkgInfo.version}'})\n`;else{const o=[];a+=(0,_uxFragmentUtils.processImportFrag)(e,t.import,o),a+=(0,_uxFragmentUtils.processTemplateFrag)(e,t.template,r,o),a+=(0,_uxFragmentUtils.processStyleFrag)(e,t.style,r),a+=(0,_uxFragmentUtils.processScriptFrag)(e,t.script,r),a+=`\n$app_define$('@app-component/${p}', [], function($app_require$, $app_exports$, $app_module$){\n`,t.script.length>0&&(a+="     $app_script$($app_module$, $app_exports$, $app_require$)\n",a+="     if ($app_exports$.__esModule && $app_exports$.default) {\n            $app_module$.exports = $app_exports$.default\n        }\n"),a+="     $app_module$.exports.template = $app_template$\n",t.style.length>0&&(a+="     $app_module$.exports.style = $app_style$\n"),a+="})\n",(0,_utils.isUXRender)(r)&&(a+=`\n$app_bootstrap$('@app-component/${p}',{ packagerVersion: '${pkgInfo.version}'})\n`),r===_utils.ENTRY_TYPE.COMP&&_compilationConfig.options.enableLazyComponent&&(a=`\n$app_define_wrap$('@app-component/${p}', function () {\n ${a} \n})\n`)}return a}function loader(e){const t=this.async();this.cacheable&&this.cacheable();const p=this.resourcePath,{ext:r}=_path.default.parse(p);if(-1===[".mix",".ux"].indexOf(r))return void t(new Error(`未知文件格式：${r}`));const a=_loaderUtils.default.parseQuery(this.resourceQuery),o=a.uxType,s=a.name||(0,_utils.getNameByPath)(p);_validator.default.isReservedTag(s)&&(0,_utils.logWarn)(this,[{reason:"脚本文件名不能使用保留字:"+s}]),(0,_utils.print)({resourceQuery:this.resourceQuery,resourcePath:p,name:s});const i=(0,_compiler.parseFragmentsWithCache)(e,p);(0,_utils.print)(i),parseImportList(this,i.import).then(()=>assemble(this,i,s,o,p)).then(e=>{t(null,e)}).catch(e=>{t(e,"")})}module.exports=loader;
//# sourceMappingURL=ux-loader.js.map
